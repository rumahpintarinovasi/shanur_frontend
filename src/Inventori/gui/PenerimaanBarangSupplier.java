/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inventori.gui;

import App.Outlet;
import Inventori.Barang;
import Inventori.Items;
import Inventori.Satuan;
import Inventori.StokBarang;
import Inventori.StokItem;
import Util.BackgroundImage;
import Util.BackgroundPane;
import Util.DBConnector;
import java.awt.BorderLayout;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;

/**
 *
 * @author Yestin
 */
public class PenerimaanBarangSupplier extends javax.swing.JFrame {

    Items Item = new Items();
    StokItem StokItem = new StokItem();
    StokBarang StokBarang = new StokBarang();
    Outlet Outlet = new Outlet();
    Satuan Satuan = new Satuan();
    BackgroundImage BI = new BackgroundImage();
    /**
     * Creates new form PenerimaanBarang
     */
    public PenerimaanBarangSupplier() {
        initComponents();
        setTitle("Penerimaan Barang/Penambahan Stok");
        
        BI.BackgroundJPanel(this, pnlPenerimaanBarang);
        
        Satuan.getSatuan(cboSatuan);
        ftxtKodeSatuan.setValue(new Integer(0));
        ftxtKodeSatuan.setVisible(false);
        //ftxtKodeStokItem.setValue(new Integer(0));
        ftxtKodeStokItem.setVisible(false);
        ftxtKodeStokBarang.setVisible(false);
        ftxtKodeOutlet.setVisible(false);
        dchTanggal.setCalendar(Calendar.getInstance());
        dchTanggal.setDateFormatString("dd-MM-yyyy");
        txtBarcode.setText(new String());
        txtBarcode.setText(null);
        txtNamaItem.setText(new String());
        txtNamaItem.setText(null);
        ftxtStokMasuk.setValue(new Double(0.00));
        ftxtStokMasuk.setValue(null);
        ftxtKuantitas.setValue(new Double(0.00));
        ftxtKuantitas.setValue(null);
        ftxtIsi.setValue(new Double(0.00));
        ftxtIsi.setValue(null);
        ftxtStokMax.setValue(new Double(0.00));
        ftxtStokMax.setValue(null);
        ftxtStokMin.setValue(new Double(0.00));
        ftxtStokMin.setValue(null);
        ftxtHargaModal.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter(
                        new DecimalFormat("#,##0"))));
        ftxtHargaModal.setValue(new Double(0.00));
        ftxtHargaJual.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter(
                        new DecimalFormat("#,##0"))));
        ftxtHargaJual.setValue(new Double(0.00));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPenerimaanBarang = new javax.swing.JPanel();
        dchTanggal = new com.toedter.calendar.JDateChooser();
        ftxtKodeOutlet = new javax.swing.JFormattedTextField();
        ftxtKodeSatuan = new javax.swing.JFormattedTextField();
        btnBarcode = new javax.swing.JLabel();
        txtBarcode = new javax.swing.JTextField();
        btnDaftarItem = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtNamaItem = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cboSatuan = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        ftxtKuantitas = new javax.swing.JFormattedTextField();
        jLabel4 = new javax.swing.JLabel();
        ftxtIsi = new javax.swing.JFormattedTextField();
        lblStokMax = new javax.swing.JLabel();
        ftxtStokMax = new javax.swing.JFormattedTextField();
        lblStokMinimum = new javax.swing.JLabel();
        ftxtStokMin = new javax.swing.JFormattedTextField();
        lblHargaModal = new javax.swing.JLabel();
        ftxtHargaModal = new javax.swing.JFormattedTextField();
        btnSimpan = new javax.swing.JButton();
        btnTutup = new javax.swing.JButton();
        lblStokMasuk = new javax.swing.JLabel();
        ftxtStokMasuk = new javax.swing.JFormattedTextField();
        ftxtKodeStokItem = new javax.swing.JFormattedTextField();
        ftxtKodeStokBarang = new javax.swing.JFormattedTextField();
        btnRegistrasiItem = new javax.swing.JButton();
        lblHargaJual = new javax.swing.JLabel();
        ftxtHargaJual = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlPenerimaanBarang.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        ftxtKodeOutlet.setEditable(false);
        ftxtKodeOutlet.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ftxtKodeOutlet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftxtKodeOutletActionPerformed(evt);
            }
        });

        ftxtKodeSatuan.setEditable(false);
        ftxtKodeSatuan.setForeground(new java.awt.Color(0, 0, 255));
        ftxtKodeSatuan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ftxtKodeSatuan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftxtKodeSatuanActionPerformed(evt);
            }
        });

        btnBarcode.setBackground(new java.awt.Color(255, 255, 255));
        btnBarcode.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnBarcode.setForeground(new java.awt.Color(0, 0, 255));
        btnBarcode.setText("Barcode :");

        txtBarcode.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtBarcode.setForeground(new java.awt.Color(0, 0, 255));
        txtBarcode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBarcodeKeyPressed(evt);
            }
        });

        btnDaftarItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/DaftarItem.png"))); // NOI18N
        btnDaftarItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDaftarItemActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Nama Item :");

        txtNamaItem.setEditable(false);
        txtNamaItem.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtNamaItem.setForeground(new java.awt.Color(0, 0, 255));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("Satuan :");

        cboSatuan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cboSatuan.setForeground(new java.awt.Color(0, 0, 255));
        cboSatuan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboSatuanItemStateChanged(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Kuantitas :");

        ftxtKuantitas.setEditable(false);
        ftxtKuantitas.setForeground(new java.awt.Color(0, 0, 255));
        ftxtKuantitas.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ftxtKuantitas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftxtKuantitasActionPerformed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 255));
        jLabel4.setText("Isi :");

        ftxtIsi.setForeground(new java.awt.Color(0, 0, 255));
        ftxtIsi.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblStokMax.setBackground(new java.awt.Color(255, 255, 255));
        lblStokMax.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblStokMax.setForeground(new java.awt.Color(0, 0, 255));
        lblStokMax.setText("Stok Maximum :");

        ftxtStokMax.setForeground(new java.awt.Color(0, 0, 255));
        ftxtStokMax.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblStokMinimum.setBackground(new java.awt.Color(255, 255, 255));
        lblStokMinimum.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblStokMinimum.setForeground(new java.awt.Color(0, 0, 255));
        lblStokMinimum.setText("Stok Minimum :");

        ftxtStokMin.setForeground(new java.awt.Color(0, 0, 255));
        ftxtStokMin.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblHargaModal.setBackground(new java.awt.Color(255, 255, 255));
        lblHargaModal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblHargaModal.setForeground(new java.awt.Color(0, 0, 255));
        lblHargaModal.setText("Harga Modal :");

        ftxtHargaModal.setForeground(new java.awt.Color(0, 0, 255));
        ftxtHargaModal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
        ftxtHargaModal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        btnSimpan.setBackground(new java.awt.Color(255, 255, 255));
        btnSimpan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Simpan2.png"))); // NOI18N
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });

        btnTutup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Tutup.png"))); // NOI18N
        btnTutup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTutupActionPerformed(evt);
            }
        });

        lblStokMasuk.setBackground(new java.awt.Color(255, 255, 255));
        lblStokMasuk.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblStokMasuk.setForeground(new java.awt.Color(0, 0, 255));
        lblStokMasuk.setText("Stok Masuk :");

        ftxtStokMasuk.setForeground(new java.awt.Color(0, 0, 255));
        ftxtStokMasuk.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        ftxtKodeStokItem.setEditable(false);
        ftxtKodeStokItem.setForeground(new java.awt.Color(0, 0, 255));
        ftxtKodeStokItem.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ftxtKodeStokItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftxtKodeStokItemActionPerformed(evt);
            }
        });

        ftxtKodeStokBarang.setEditable(false);
        ftxtKodeStokBarang.setForeground(new java.awt.Color(0, 0, 255));
        ftxtKodeStokBarang.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        btnRegistrasiItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/RegistrasiItem.png"))); // NOI18N
        btnRegistrasiItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrasiItemActionPerformed(evt);
            }
        });

        lblHargaJual.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblHargaJual.setForeground(new java.awt.Color(0, 0, 255));
        lblHargaJual.setText("Harga Jual :");

        ftxtHargaJual.setForeground(new java.awt.Color(0, 0, 255));
        ftxtHargaJual.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout pnlPenerimaanBarangLayout = new javax.swing.GroupLayout(pnlPenerimaanBarang);
        pnlPenerimaanBarang.setLayout(pnlPenerimaanBarangLayout);
        pnlPenerimaanBarangLayout.setHorizontalGroup(
            pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPenerimaanBarangLayout.createSequentialGroup()
                .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlPenerimaanBarangLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(btnSimpan)
                        .addGap(18, 18, 18)
                        .addComponent(btnRegistrasiItem)
                        .addGap(18, 18, 18)
                        .addComponent(btnTutup)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlPenerimaanBarangLayout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPenerimaanBarangLayout.createSequentialGroup()
                                .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnBarcode)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(lblStokMasuk))
                                .addGap(78, 78, 78)
                                .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNamaItem, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cboSatuan, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtBarcode)
                                    .addGroup(pnlPenerimaanBarangLayout.createSequentialGroup()
                                        .addComponent(btnDaftarItem)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(ftxtStokMasuk)))
                            .addGroup(pnlPenerimaanBarangLayout.createSequentialGroup()
                                .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(lblStokMax)
                                    .addComponent(lblStokMinimum)
                                    .addComponent(lblHargaModal)
                                    .addComponent(lblHargaJual))
                                .addGap(61, 61, 61)
                                .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ftxtKuantitas)
                                    .addComponent(ftxtIsi)
                                    .addComponent(ftxtStokMax)
                                    .addComponent(ftxtStokMin)
                                    .addComponent(ftxtHargaModal)
                                    .addComponent(ftxtHargaJual)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlPenerimaanBarangLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ftxtKodeOutlet, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ftxtKodeSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ftxtKodeStokItem, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ftxtKodeStokBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                        .addComponent(dchTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(47, 47, 47))
        );
        pnlPenerimaanBarangLayout.setVerticalGroup(
            pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPenerimaanBarangLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ftxtKodeOutlet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ftxtKodeSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dchTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ftxtKodeStokItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ftxtKodeStokBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(71, 71, 71)
                .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBarcode)
                    .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDaftarItem)
                .addGap(20, 20, 20)
                .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNamaItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cboSatuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftxtStokMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblStokMasuk))
                .addGap(18, 18, 18)
                .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftxtKuantitas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ftxtIsi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStokMax)
                    .addComponent(ftxtStokMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStokMinimum)
                    .addComponent(ftxtStokMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHargaModal)
                    .addComponent(ftxtHargaModal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHargaJual)
                    .addComponent(ftxtHargaJual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPenerimaanBarangLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnTutup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSimpan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnRegistrasiItem))
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPenerimaanBarang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPenerimaanBarang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBarcodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBarcodeKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            if(txtBarcode.getText().trim().length()==0){
                JOptionPane.showMessageDialog(this, "Barcode Belum Diisi");
                return;
            }
            String Barcode = (((String)txtBarcode.getText().trim()).toString());
            txtBarcode.setText(new String(Barcode));
            String NamaItem = Item.getNamaItem(Barcode);
            txtNamaItem.setText(new String(NamaItem));
            
            if(cboSatuan.getSelectedIndex()==0){    
                ftxtKuantitas.setValue(new Double(0.00));
                ftxtIsi.setValue(new Double(0.00));
                ftxtStokMax.setValue(new Double(0.00));
                ftxtStokMin.setValue(new Double(0.00));
                ftxtHargaModal.setValue(new Double(0.00));
            }
            else{
                int KodeOutlet = (((Integer)ftxtKodeOutlet.getValue()).intValue());
                int KodeSatuan = (((Integer)ftxtKodeSatuan.getValue()).intValue());
                int KodeStok = StokItem.getKodeStok(Barcode,KodeOutlet,KodeSatuan);
                Double Kuantitas = StokItem.getKuantitas(KodeStok);
                ftxtKuantitas.setValue(new Double(Kuantitas));
                Double Isi = StokItem.getIsi(KodeStok);
                ftxtIsi.setValue(new Double(Isi));
                Double StokMax = StokItem.getStokMax(KodeStok);
                ftxtStokMax.setValue(new Double(StokMax));
                Double StokMin = StokItem.getStokMin(KodeStok);
                ftxtStokMin.setValue(new Double(StokMin));
                Double HrgModal = StokItem.getHargaModal(KodeStok);
                ftxtHargaModal.setValue(new Double(HrgModal));
            }
            
        }
    }//GEN-LAST:event_txtBarcodeKeyPressed

    private void cboSatuanItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboSatuanItemStateChanged
        // TODO add your handling code here:
        if(cboSatuan.getSelectedIndex()==0){
            ftxtKodeSatuan.setValue(new Integer(0));
            
            ftxtKodeSatuan.setValue(new Double(0.00));
            ftxtKuantitas.setValue(new Double(0.00));
            ftxtIsi.setValue(new Double(0.00));
            ftxtStokMax.setValue(new Double(0.00));
            ftxtStokMin.setValue(new Double(0.00));
            ftxtHargaModal.setValue(new Double(0.00));
        }
        else{
            String Satuan = (((String)cboSatuan.getSelectedItem()).toString());
            int Kode = Satuan.indexOf(' ');
            String KodeSatuan = Satuan.substring(0, Kode);
            int KodeSat = Integer.valueOf(KodeSatuan);
            ftxtKodeSatuan.setValue(new Integer(KodeSat));
            int KodeOutlet = (((Integer)ftxtKodeOutlet.getValue()).intValue());
            String Barcode = (((String)txtBarcode.getText().trim()).toString());
            int KodeStok = StokItem.getKodeStok(Barcode,KodeOutlet,KodeSat);
            ftxtKodeStokItem.setValue(new Integer(KodeStok));
            Double Kuantitas = StokItem.getKuantitas(KodeStok);
            ftxtKuantitas.setValue(new Double(Kuantitas));
            Double Isi = StokItem.getIsi(KodeStok);
            ftxtIsi.setValue(new Double(Isi));
            Double StokMax = StokItem.getStokMax(KodeStok);
            ftxtStokMax.setValue(new Double(StokMax));
            Double StokMin = StokItem.getStokMin(KodeStok);
            ftxtStokMin.setValue(new Double(StokMin));
            Double HargaModal = StokItem.getHargaModal(KodeStok);
            ftxtHargaModal.setValue(new Double(HargaModal));
            
            Calendar Tanggal = dchTanggal.getCalendar();
            
            int KodeStokBrng = StokBarang.getLastKodeStok(Barcode, KodeOutlet, KodeSat, Tanggal);
            ftxtKodeStokBarang.setValue(new Integer(KodeStokBrng));
        }
    }//GEN-LAST:event_cboSatuanItemStateChanged

    private void btnDaftarItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDaftarItemActionPerformed
        // TODO add your handling code here:
        DataItems DI = new DataItems(this, true);
        DI.setLocationRelativeTo(this);
        DI.setVisible(true);
        
        Item = DI.getSelectedItems();
        
        String Barcode = Item.getBarcode();
        txtBarcode.setText(new String(Barcode));
        String NamaItem = Item.getNamaItem(Barcode);
        txtNamaItem.setText(new String(NamaItem));
        int KodeOutlet = (((Integer)ftxtKodeOutlet.getValue()).intValue());
        int KodeSatuan = (((Integer)ftxtKodeSatuan.getValue()).intValue());
        int KodeStok = StokItem.getKodeStok(Barcode,KodeOutlet,KodeSatuan);
        ftxtKodeStokItem.setValue(KodeStok);
        Double Kuantitas = StokItem.getKuantitas(KodeStok);
        ftxtKuantitas.setValue(new Double(Kuantitas));
        Double Isi = StokItem.getIsi(KodeStok);
        ftxtIsi.setValue(new Double(Isi));
        Double StokMax = StokItem.getStokMax(KodeStok);
        ftxtStokMax.setValue(new Double(StokMax));
        Double StokMin = StokItem.getStokMin(KodeStok);
        ftxtStokMin.setValue(new Double(StokMin));
        Double HargaModal = StokItem.getHargaModal(KodeStok);
        ftxtHargaModal.setValue(new Double(HargaModal));
        
        Calendar Tanggal = dchTanggal.getCalendar();
        int KodeStokBrng = StokBarang.getLastKodeStok(Barcode, KodeOutlet, KodeSatuan, Tanggal);
        ftxtKodeStokBarang.setValue(new Integer(KodeStokBrng));
    }//GEN-LAST:event_btnDaftarItemActionPerformed

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        if(txtBarcode.getText().trim().length()==0){
            JOptionPane.showMessageDialog(this, "Barcode Belum Diisi");
            return;
        }
        if(txtNamaItem.getText().trim().length()==0){
            JOptionPane.showMessageDialog(this, "Nama Item Belum Diisi");
            return;
        }
        if(cboSatuan.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(this, "Satuan Belum Dipilih");
            return;
        }
        if(ftxtStokMasuk.getText().trim().length()==0){
            JOptionPane.showMessageDialog(this, "Stok Masuk Belum Diisi");
            return;
        }
        if(ftxtStokMasuk.getValue() instanceof Long){
            if(((Long)ftxtStokMasuk.getValue()).doubleValue()==0.00){
                JOptionPane.showMessageDialog(this, "Stok Masuk Tidak Boleh 0");
                return;
            }
        }
        else if(ftxtStokMasuk.getValue() instanceof Double){
            if(((Double)ftxtStokMasuk.getValue()).doubleValue()==0.00){
                JOptionPane.showMessageDialog(this, "Stok Masuk Tidak Boleh 0");
                return;
            }
        }
//        if(ftxtStokMax.getValue() instanceof Long){
//            if(((Long)ftxtStokMax.getValue()).doubleValue()==0.00){
//                JOptionPane.showMessageDialog(this, "Stok Maximum Tidak Boleh 0");
//                return;
//            }
//        }
//        else if(ftxtStokMax.getValue() instanceof Double){
//            if(((Double)ftxtStokMax.getValue()).doubleValue()==0.00){
//                JOptionPane.showMessageDialog(this, "Stok Maximum Tidak Boleh 0");
//                return;
//            }
//        }
//        if(ftxtStokMin.getValue() instanceof Long){
//            if(((Long)ftxtStokMin.getValue()).doubleValue()==0.00){
//                JOptionPane.showMessageDialog(this, "Stok Minimum Tidak Boleh 0");
//                return;
//            }
//        }
//        else if(ftxtStokMin.getValue() instanceof Double){
//            if(((Double)ftxtStokMin.getValue()).doubleValue()==0.00){
//                JOptionPane.showMessageDialog(this, "Stok Minimum Tidak Boleh 0");
//                return;
//            }
//        }
//        if(ftxtHargaModal.getValue() instanceof Long){
//            if(((Long)ftxtHargaModal.getValue()).doubleValue()==0.00){
//                JOptionPane.showMessageDialog(this, "Harga Modal Tidak Boleh 0");
//                return;
//            }
//        }
//        else if(ftxtHargaModal.getValue() instanceof Double){
//            if(((Double)ftxtHargaModal.getValue()).doubleValue()==0.00){
//                JOptionPane.showMessageDialog(this, "Harga Modal Tidak Boleh 0");
//            }
//        }
//        if(ftxtHargaJual.getValue() instanceof Long){
//            if(((Long)ftxtHargaJual.getValue()).doubleValue()==0.00){
//                JOptionPane.showMessageDialog(this, "Harga Jual Tidak Boleh 0");
//            }
//        }
//        else if(ftxtHargaJual.getValue() instanceof Double){
//            if(((Double)ftxtHargaJual.getValue()).doubleValue()==0.00){
//                JOptionPane.showMessageDialog(this, "Harga Jual Tidak Boleh 0");
//            }
//        }
        
        int KodeOutlet = (((Integer)ftxtKodeOutlet.getValue()).intValue());
        int KodeSatuan = (((Integer)ftxtKodeSatuan.getValue()).intValue());
        int KodeStok = (((Integer)ftxtKodeStokItem.getValue()).intValue());
        String Barcode = (((String)txtBarcode.getText().trim()).toString());
        String NamaItem = (((String)txtNamaItem.getText().trim()).toString());
        Double Kuantitas = (((Double)ftxtKuantitas.getValue()).doubleValue());
        
        try {
            if((((Integer)ftxtKodeStokItem.getValue()).intValue())==0 || ftxtKodeStokItem.getText().trim()==null){
                StokItem.Simpan(Barcode, KodeOutlet, KodeSatuan, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00);
                DBConnector.getConnection().commit();
                int LastKodeStok = StokItem.getLastKodeStok(Barcode, KodeOutlet, KodeSatuan);
                if(ftxtStokMasuk.getValue() instanceof Double){
                    Double StokMasuk = (((Double)ftxtStokMasuk.getValue()).doubleValue());
                    StokItem.UpdateKuantitas(LastKodeStok, StokMasuk);
                    Double Qtty = StokItem.getKuantitas(KodeStok);
                    ftxtKuantitas.setValue(new Double(Qtty));
                }
                else if(ftxtStokMasuk.getValue() instanceof Long){
                    Double StokMasuk = (((Long)ftxtStokMasuk.getValue()).doubleValue());
                    StokItem.UpdateKuantitas(LastKodeStok, StokMasuk);
                    Double Qtty = StokItem.getKuantitas(KodeStok);
                    ftxtKuantitas.setValue(new Double(Qtty));
                }
                
                if(ftxtIsi.getValue() instanceof Double){
                    Double Isi = (((Double)ftxtIsi.getValue()).doubleValue());
                    StokItem.UpdateIsi(LastKodeStok, Isi);
                }
                else if(ftxtIsi.getValue() instanceof Long){
                    Double Isi = (((Long)ftxtIsi.getValue()).doubleValue());
                    StokItem.UpdateIsi(LastKodeStok, Isi);
                }
                
                if(ftxtStokMax.getValue() instanceof Double){
                    Double StokMax = (((Double)ftxtStokMax.getValue()).doubleValue());
                    StokItem.UpdateStokMax(LastKodeStok, StokMax);
                }
                else if(ftxtStokMax.getValue() instanceof Long){
                    Double StokMax = (((Long)ftxtStokMax.getValue()).doubleValue());
                    StokItem.UpdateStokMax(LastKodeStok, StokMax);
                }
                
                if(ftxtStokMin.getValue() instanceof Double){
                    Double StokMin = (((Double)ftxtStokMin.getValue()).doubleValue());
                    StokItem.UpdateStokMin(LastKodeStok, StokMin);
                }
                else if(ftxtStokMin.getValue() instanceof Long){
                    Double StokMin = (((Long)ftxtStokMin.getValue()).doubleValue());
                    StokItem.UpdateStokMin(LastKodeStok, StokMin);
                }
                
                if(ftxtHargaModal.getValue() instanceof Double){
                    Double HargaModal = (((Double)ftxtHargaModal.getValue()).doubleValue());
                    StokItem.UpdateHargaModal(LastKodeStok, HargaModal);
                }
                else if(ftxtHargaModal.getValue() instanceof Long){
                    Double HargaModal = (((Long)ftxtHargaModal.getValue()).doubleValue());
                    StokItem.UpdateHargaModal(LastKodeStok, HargaModal);
                }
                if(ftxtHargaJual.getValue() instanceof Long){
                    Double HargaJual = (((Long)ftxtHargaJual.getValue()).doubleValue());
                    StokItem.UpdateHargaJual(LastKodeStok, HargaJual);
                }
                else if(ftxtHargaJual.getValue() instanceof Double){
                    Double HargaJual = (((Double)ftxtHargaJual.getValue()).doubleValue());
                    StokItem.UpdateHargaJual(LastKodeStok, HargaJual);
                }
            }
            else if(((Integer)ftxtKodeStokItem.getValue()).intValue()>0){
                if(ftxtStokMasuk.getValue() instanceof Double){
                    Double StokMasuk = (((Double)ftxtStokMasuk.getValue()).doubleValue());
                    StokItem.TambahKuantitas(KodeStok, StokMasuk);
                    Double Qtty = StokItem.getKuantitas(KodeStok);
                    ftxtKuantitas.setValue(new Double(Qtty));
                }
                else if(ftxtStokMasuk.getValue() instanceof Long){
                    Double StokMasuk = (((Long)ftxtStokMasuk.getValue()).doubleValue());
                    StokItem.TambahKuantitas(KodeStok, StokMasuk);
                    Double Qtty = StokItem.getKuantitas(KodeStok);
                    ftxtKuantitas.setValue(new Double(Qtty));
                }
                
                if(ftxtIsi.getValue() instanceof Double){
                    Double Isi = (((Double)ftxtIsi.getValue()).doubleValue());
                    StokItem.UpdateIsi(KodeStok, Isi);
                }
                else if(ftxtIsi.getValue() instanceof Long){
                    Double Isi = (((Long)ftxtIsi.getValue()).doubleValue());
                    StokItem.UpdateIsi(KodeStok, Isi);
                }
                
                if(ftxtStokMax.getValue() instanceof Double){
                    Double StokMax = (((Double)ftxtStokMax.getValue()).doubleValue());
                    StokItem.UpdateStokMax(KodeStok, StokMax);
                }
                else if(ftxtStokMax.getValue() instanceof Long){
                    Double StokMax = (((Long)ftxtStokMax.getValue()).doubleValue());
                    StokItem.UpdateStokMax(KodeStok, StokMax);
                }
                
                if(ftxtStokMin.getValue() instanceof Double){
                    Double StokMin = (((Double)ftxtStokMin.getValue()).doubleValue());
                    StokItem.UpdateStokMin(KodeStok, StokMin);
                }
                else if(ftxtStokMin.getValue() instanceof Long){
                    Double StokMin = (((Long)ftxtStokMin.getValue()).doubleValue());
                    StokItem.UpdateStokMin(KodeStok, StokMin);
                }
                
                if(ftxtHargaModal.getValue() instanceof Double){
                    Double HargaModal = (((Double)ftxtHargaModal.getValue()).doubleValue());
                    StokItem.UpdateHargaModal(KodeStok, HargaModal);
                }
                else if(ftxtHargaModal.getValue() instanceof Long){
                    Double HargaModal = (((Long)ftxtHargaModal.getValue()).doubleValue());
                    StokItem.UpdateHargaModal(KodeStok, HargaModal);
                }
                if(ftxtHargaJual.getValue() instanceof Long){
                    Double HargaJual = (((Long)ftxtHargaJual.getValue()).doubleValue());
                    StokItem.UpdateHargaJual(KodeStok, HargaJual);
                }
                else if(ftxtHargaJual.getValue() instanceof Double){
                    Double HargaJual = (((Double)ftxtHargaJual.getValue()).doubleValue());
                    StokItem.UpdateHargaJual(KodeStok, HargaJual);
                }
            }
            
            int KodeStokBrng = (((Integer)ftxtKodeStokBarang.getValue()).intValue());
            Calendar Tanggal = dchTanggal.getCalendar();
            if(KodeStokBrng==0 || ftxtKodeStokBarang.getText().trim()==null){
                StokBarang.Simpan(Barcode, KodeOutlet, KodeSatuan, Tanggal, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00, 0.00);
                
                int LastKodeStok = StokBarang.getLastKodeStok(Barcode, KodeOutlet, KodeSatuan, Tanggal);
                if(ftxtStokMasuk.getValue() instanceof Double){
                    Double StokMasuk = (((Double)ftxtStokMasuk.getValue()).doubleValue());
                    StokBarang.TambahStokMasuk(LastKodeStok, StokMasuk);
                    StokBarang.TambahSisaStok(LastKodeStok, StokMasuk);
                }
                else if(ftxtStokMasuk.getValue() instanceof Long){
                    Double StokMasuk = (((Long)ftxtStokMasuk.getValue()).doubleValue());
                    StokBarang.TambahStokMasuk(LastKodeStok, StokMasuk);
                    StokBarang.TambahSisaStok(LastKodeStok, StokMasuk);
                }
                
                if(ftxtHargaModal.getValue() instanceof Double){
                    Double HargaModal = (((Double)ftxtHargaModal.getValue()).doubleValue());
                    StokBarang.UpdateHargaModal(LastKodeStok, HargaModal);
                }
                else if(ftxtHargaModal.getValue() instanceof Long){
                    Double HargaModal = (((Long)ftxtHargaModal.getValue()).doubleValue());
                    StokBarang.UpdateHargaModal(LastKodeStok, HargaModal);
                }
                
                if((ftxtStokMasuk.getValue() instanceof Double) && (ftxtHargaModal.getValue() instanceof Double)){
                    Double StokMasuk = (((Double)ftxtStokMasuk.getValue()).doubleValue());
                    Double HargaModal = (((Double)ftxtHargaModal.getValue()).doubleValue());
                    
                    Double TotalModal = StokMasuk * HargaModal;
                    StokBarang.TambahTotalModal(LastKodeStok, TotalModal);
                }
                else if((ftxtStokMasuk.getValue() instanceof Double) && (ftxtHargaModal.getValue() instanceof Long)){
                    Double StokMasuk = (((Double)ftxtStokMasuk.getValue()).doubleValue());
                    Double HargaModal = (((Long)ftxtHargaModal.getValue()).doubleValue());
                    
                    Double TotalModal = StokMasuk * HargaModal;
                    StokBarang.TambahTotalModal(LastKodeStok, TotalModal);
                }
                else if((ftxtStokMasuk.getValue() instanceof Long) && (ftxtHargaModal.getValue() instanceof Double)){
                    Double StokMasuk = (((Long)ftxtStokMasuk.getValue()).doubleValue());
                    Double HargaModal = (((Double)ftxtHargaModal.getValue()).doubleValue());
                    
                    Double TotalModal = StokMasuk * HargaModal;
                    StokBarang.TambahTotalModal(LastKodeStok, TotalModal);
                }
                else if((ftxtStokMasuk.getValue() instanceof Long) && (ftxtHargaModal.getValue() instanceof Long)){
                    Double StokMasuk = (((Long)ftxtStokMasuk.getValue()).doubleValue());
                    Double HargaModal = (((Long)ftxtHargaModal.getValue()).doubleValue());
                    
                    Double TotalModal = StokMasuk * HargaModal;
                    StokBarang.TambahTotalModal(LastKodeStok, TotalModal);
                }
            }
            else if(KodeStokBrng>0){
                int LastKodeStok = StokBarang.getLastKodeStok(Barcode, KodeOutlet, KodeSatuan, Tanggal);
                if(ftxtStokMasuk.getValue() instanceof Double){
                    Double StokMasuk = (((Double)ftxtStokMasuk.getValue()).doubleValue());
                    StokBarang.TambahStokMasuk(LastKodeStok, StokMasuk);
                    StokBarang.TambahSisaStok(LastKodeStok, StokMasuk);
                }
                else if(ftxtStokMasuk.getValue() instanceof Long){
                    Double StokMasuk = (((Long)ftxtStokMasuk.getValue()).doubleValue());
                    StokBarang.TambahStokMasuk(LastKodeStok, StokMasuk);
                    StokBarang.TambahSisaStok(LastKodeStok, StokMasuk);
                }
                
                if(ftxtHargaModal.getValue() instanceof Double){
                    Double HargaModal = (((Double)ftxtHargaModal.getValue()).doubleValue());
                    StokBarang.UpdateHargaModal(LastKodeStok, HargaModal);
                }
                else if(ftxtHargaModal.getValue() instanceof Long){
                    Double HargaModal = (((Long)ftxtHargaModal.getValue()).doubleValue());
                    StokBarang.UpdateHargaModal(LastKodeStok, HargaModal);
                }
                
                if((ftxtStokMasuk.getValue() instanceof Double) && (ftxtHargaModal.getValue() instanceof Double)){
                    Double StokMasuk = (((Double)ftxtStokMasuk.getValue()).doubleValue());
                    Double HargaModal = (((Double)ftxtHargaModal.getValue()).doubleValue());
                    
                    Double TotalModal = StokMasuk * HargaModal;
                    StokBarang.TambahTotalModal(LastKodeStok, TotalModal);
                }
                else if((ftxtStokMasuk.getValue() instanceof Double) && (ftxtHargaModal.getValue() instanceof Long)){
                    Double StokMasuk = (((Double)ftxtStokMasuk.getValue()).doubleValue());
                    Double HargaModal = (((Long)ftxtHargaModal.getValue()).doubleValue());
                    
                    Double TotalModal = StokMasuk * HargaModal;
                    StokBarang.TambahTotalModal(LastKodeStok, TotalModal);
                }
                else if((ftxtStokMasuk.getValue() instanceof Long) && (ftxtHargaModal.getValue() instanceof Double)){
                    Double StokMasuk = (((Long)ftxtStokMasuk.getValue()).doubleValue());
                    Double HargaModal = (((Double)ftxtHargaModal.getValue()).doubleValue());
                    
                    Double TotalModal = StokMasuk * HargaModal;
                    StokBarang.TambahTotalModal(LastKodeStok, TotalModal);
                }
                else if((ftxtStokMasuk.getValue() instanceof Long) && (ftxtHargaModal.getValue() instanceof Long)){
                    Double StokMasuk = (((Long)ftxtStokMasuk.getValue()).doubleValue());
                    Double HargaModal = (((Long)ftxtHargaModal.getValue()).doubleValue());
                    
                    Double TotalModal = StokMasuk * HargaModal;
                    StokBarang.TambahTotalModal(LastKodeStok, TotalModal);
                }
            }
            
            DBConnector.getConnection().commit();
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Data Berhasil Disimpan");
            
            ftxtKuantitas.setValue(StokItem.getKuantitas(KodeStok));
        } 
        catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error Saat Menyimpan Penerimaan Barang : "+e.getMessage(),
                    "Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnTutupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTutupActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnTutupActionPerformed

    private void btnRegistrasiItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrasiItemActionPerformed
        // TODO add your handling code here:
        RegistrasiItem RI = new RegistrasiItem();
        RI.setLocationRelativeTo(this);
        RI.setVisible(true);
    }//GEN-LAST:event_btnRegistrasiItemActionPerformed

    private void ftxtKodeStokItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftxtKodeStokItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftxtKodeStokItemActionPerformed

    private void ftxtKodeSatuanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftxtKodeSatuanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftxtKodeSatuanActionPerformed

    private void ftxtKodeOutletActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftxtKodeOutletActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftxtKodeOutletActionPerformed

    private void ftxtKuantitasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftxtKuantitasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftxtKuantitasActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnBarcode;
    private javax.swing.JButton btnDaftarItem;
    private javax.swing.JButton btnRegistrasiItem;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JButton btnTutup;
    private javax.swing.JComboBox<String> cboSatuan;
    private com.toedter.calendar.JDateChooser dchTanggal;
    private javax.swing.JFormattedTextField ftxtHargaJual;
    private javax.swing.JFormattedTextField ftxtHargaModal;
    private javax.swing.JFormattedTextField ftxtIsi;
    public javax.swing.JFormattedTextField ftxtKodeOutlet;
    private javax.swing.JFormattedTextField ftxtKodeSatuan;
    private javax.swing.JFormattedTextField ftxtKodeStokBarang;
    private javax.swing.JFormattedTextField ftxtKodeStokItem;
    private javax.swing.JFormattedTextField ftxtKuantitas;
    private javax.swing.JFormattedTextField ftxtStokMasuk;
    private javax.swing.JFormattedTextField ftxtStokMax;
    private javax.swing.JFormattedTextField ftxtStokMin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblHargaJual;
    private javax.swing.JLabel lblHargaModal;
    private javax.swing.JLabel lblStokMasuk;
    private javax.swing.JLabel lblStokMax;
    private javax.swing.JLabel lblStokMinimum;
    private javax.swing.JPanel pnlPenerimaanBarang;
    private javax.swing.JTextField txtBarcode;
    private javax.swing.JTextField txtNamaItem;
    // End of variables declaration//GEN-END:variables
}
