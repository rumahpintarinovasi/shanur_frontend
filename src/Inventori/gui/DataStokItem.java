/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inventori.gui;

import App.Outlet;
import Inventori.Items;
import Inventori.Kategori;
import Inventori.StokItem;
import Util.BackgroundImage;
import Util.BackgroundPane;
import Util.Table;
import java.awt.BorderLayout;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yestin
 */
public class DataStokItem extends javax.swing.JFrame {

    Items Item = new Items();
    StokItem StokItem = new StokItem();
    Outlet Outlet = new Outlet();
    Kategori Kat = new Kategori();
    Table Tab = new Table();
    BackgroundImage BI = new BackgroundImage();
    
    int Left = SwingConstants.LEFT;
    int Center = SwingConstants.CENTER;
    int Right = SwingConstants.RIGHT;
    /**
     * Creates new form DataStokItem
     */
    public DataStokItem() {
        initComponents();
        setTitle("Data Stok Item");
        BI.BackgroundJPanel(this, pnlDataStokItem);
        Outlet.getOutlet(cboOutlet);
        Kat.getKategori(cboKategori);
        InitTableStokItem();
    }
    private void InitTableStokItem(){
        tblStokItem.setModel(new DefaultTableModel(){
            String ColName[] = {"Barcode","Nama Item","Jenis Item","Outlet","Satuan","Kuantitas","Isi","Stok Max","Stok Min"};
            Class ColType[] = {String.class,String.class,String.class,String.class,Double.class,Double.class,Double.class,Double.class};
            
            @Override
            public Class<?> getColumnClass(int ColIndex){
                return ColType[ColIndex];
            }
            @Override
            public String getColumnName(int ColIndex){
                return ColName[ColIndex];
            }
            @Override
            public int getColumnCount(){
                return 9;
            }
        });
        
        tblStokItem.getColumnModel().getColumn(0).setPreferredWidth(80); //Barcode
        tblStokItem.getColumnModel().getColumn(1).setPreferredWidth(200); //NamaItem
        tblStokItem.getColumnModel().getColumn(2).setPreferredWidth(80); //JenisItem
        tblStokItem.getColumnModel().getColumn(3).setPreferredWidth(100); //Outlet
        tblStokItem.getColumnModel().getColumn(4).setPreferredWidth(60); //Satuan
        tblStokItem.getColumnModel().getColumn(5).setPreferredWidth(100); //Kuanttias
        tblStokItem.getColumnModel().getColumn(6).setPreferredWidth(50); //Isi
        tblStokItem.getColumnModel().getColumn(7).setPreferredWidth(80); //StokMax
        tblStokItem.getColumnModel().getColumn(8).setPreferredWidth(80); //StokMin
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgSelection = new javax.swing.ButtonGroup();
        pnlDataStokItem = new javax.swing.JPanel();
        rbBarcode = new javax.swing.JRadioButton();
        txtBarcode = new javax.swing.JTextField();
        rbKategori = new javax.swing.JRadioButton();
        cboKategori = new javax.swing.JComboBox<>();
        rbNamaItem = new javax.swing.JRadioButton();
        txtNamaItem = new javax.swing.JTextField();
        cboOutlet = new javax.swing.JComboBox<>();
        ftxtKodeOutlet = new javax.swing.JFormattedTextField();
        lblOutlet = new javax.swing.JLabel();
        rbSemua = new javax.swing.JRadioButton();
        cbStokMinimum = new javax.swing.JCheckBox();
        cbStokMaximum = new javax.swing.JCheckBox();
        scrlStokItem = new javax.swing.JScrollPane();
        tblStokItem = new javax.swing.JTable();
        btnTampilkan = new javax.swing.JButton();
        btnTutup = new javax.swing.JButton();
        ftxtKodeKategori = new javax.swing.JFormattedTextField();
        btnExport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlDataStokItem.setForeground(new java.awt.Color(0, 0, 255));

        bgSelection.add(rbBarcode);
        rbBarcode.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbBarcode.setForeground(new java.awt.Color(51, 51, 255));
        rbBarcode.setText("Barcode :");
        rbBarcode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbBarcodeItemStateChanged(evt);
            }
        });

        txtBarcode.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtBarcode.setForeground(new java.awt.Color(0, 0, 255));

        bgSelection.add(rbKategori);
        rbKategori.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbKategori.setForeground(new java.awt.Color(0, 0, 255));
        rbKategori.setText("Kategori :");
        rbKategori.setOpaque(false);
        rbKategori.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbKategoriItemStateChanged(evt);
            }
        });

        cboKategori.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cboKategori.setForeground(new java.awt.Color(0, 0, 255));
        cboKategori.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboKategoriItemStateChanged(evt);
            }
        });

        bgSelection.add(rbNamaItem);
        rbNamaItem.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbNamaItem.setForeground(new java.awt.Color(0, 0, 255));
        rbNamaItem.setText("Nama Item :");
        rbNamaItem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbNamaItemItemStateChanged(evt);
            }
        });

        txtNamaItem.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtNamaItem.setForeground(new java.awt.Color(0, 0, 255));

        cboOutlet.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cboOutlet.setForeground(new java.awt.Color(0, 0, 255));
        cboOutlet.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboOutletItemStateChanged(evt);
            }
        });

        ftxtKodeOutlet.setEditable(false);
        ftxtKodeOutlet.setForeground(new java.awt.Color(0, 0, 255));
        ftxtKodeOutlet.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblOutlet.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblOutlet.setForeground(new java.awt.Color(0, 0, 255));
        lblOutlet.setText("Outlet :");

        bgSelection.add(rbSemua);
        rbSemua.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbSemua.setForeground(new java.awt.Color(0, 0, 255));
        rbSemua.setSelected(true);
        rbSemua.setText("Semua");
        rbSemua.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbSemuaItemStateChanged(evt);
            }
        });

        cbStokMinimum.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbStokMinimum.setForeground(new java.awt.Color(0, 0, 255));
        cbStokMinimum.setText("Stok Minimum");

        cbStokMaximum.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbStokMaximum.setForeground(new java.awt.Color(0, 0, 255));
        cbStokMaximum.setText("Stok Maximum");

        tblStokItem.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tblStokItem.setForeground(new java.awt.Color(0, 0, 255));
        scrlStokItem.setViewportView(tblStokItem);

        btnTampilkan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Tampilkan.png"))); // NOI18N
        btnTampilkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTampilkanActionPerformed(evt);
            }
        });

        btnTutup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Tutup.png"))); // NOI18N

        ftxtKodeKategori.setEditable(false);
        ftxtKodeKategori.setForeground(new java.awt.Color(0, 0, 255));
        ftxtKodeKategori.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        btnExport.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/ExportKeExcel.png"))); // NOI18N
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDataStokItemLayout = new javax.swing.GroupLayout(pnlDataStokItem);
        pnlDataStokItem.setLayout(pnlDataStokItemLayout);
        pnlDataStokItemLayout.setHorizontalGroup(
            pnlDataStokItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDataStokItemLayout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(pnlDataStokItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbBarcode)
                    .addComponent(rbKategori)
                    .addComponent(rbNamaItem)
                    .addComponent(rbSemua))
                .addGap(62, 62, 62)
                .addGroup(pnlDataStokItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDataStokItemLayout.createSequentialGroup()
                        .addComponent(ftxtKodeOutlet, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ftxtKodeKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDataStokItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtBarcode)
                        .addComponent(cboKategori, 0, 404, Short.MAX_VALUE)
                        .addComponent(txtNamaItem)))
                .addGap(87, 87, 87)
                .addGroup(pnlDataStokItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbStokMaximum)
                    .addGroup(pnlDataStokItemLayout.createSequentialGroup()
                        .addComponent(lblOutlet)
                        .addGap(69, 69, 69)
                        .addComponent(cboOutlet, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbStokMinimum))
                .addContainerGap(110, Short.MAX_VALUE))
            .addComponent(scrlStokItem)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDataStokItemLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlDataStokItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDataStokItemLayout.createSequentialGroup()
                        .addComponent(btnTampilkan)
                        .addGap(490, 490, 490))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDataStokItemLayout.createSequentialGroup()
                        .addComponent(btnExport)
                        .addGap(41, 41, 41)
                        .addComponent(btnTutup)
                        .addGap(64, 64, 64))))
        );
        pnlDataStokItemLayout.setVerticalGroup(
            pnlDataStokItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDataStokItemLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(pnlDataStokItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbBarcode)
                    .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboOutlet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOutlet))
                .addGap(18, 18, 18)
                .addGroup(pnlDataStokItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbNamaItem)
                    .addComponent(txtNamaItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlDataStokItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbKategori)
                    .addComponent(cboKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbStokMinimum))
                .addGap(18, 18, 18)
                .addGroup(pnlDataStokItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbSemua)
                    .addComponent(cbStokMaximum)
                    .addComponent(ftxtKodeOutlet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftxtKodeKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addComponent(btnTampilkan)
                .addGap(18, 18, 18)
                .addComponent(scrlStokItem, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlDataStokItemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTutup)
                    .addComponent(btnExport))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlDataStokItem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(pnlDataStokItem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rbBarcodeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbBarcodeItemStateChanged
        // TODO add your handling code here:
        txtBarcode.setEnabled(true);
        txtNamaItem.setEnabled(false);
        cboKategori.setEnabled(false);
    }//GEN-LAST:event_rbBarcodeItemStateChanged

    private void rbNamaItemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbNamaItemItemStateChanged
        // TODO add your handling code here:
        txtBarcode.setEnabled(false);
        txtNamaItem.setEnabled(true);
        cboKategori.setEnabled(false);
    }//GEN-LAST:event_rbNamaItemItemStateChanged

    private void rbKategoriItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbKategoriItemStateChanged
        // TODO add your handling code here:
        txtBarcode.setEnabled(false);
        txtNamaItem.setEnabled(false);
        cboKategori.setEnabled(true);
        
    }//GEN-LAST:event_rbKategoriItemStateChanged

    private void rbSemuaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbSemuaItemStateChanged
        // TODO add your handling code here:
        txtBarcode.setEnabled(false);
        txtNamaItem.setEnabled(false);
        cboKategori.setEnabled(false);
    }//GEN-LAST:event_rbSemuaItemStateChanged

    private void btnTampilkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTampilkanActionPerformed
        // TODO add your handling code here:
        int KodeOutlet = (((Integer)ftxtKodeOutlet.getValue()).intValue());
        if(rbBarcode.isSelected()){
            String Barcode = (((String)txtBarcode.getText().trim()).toString());
            StokItem.getStokItem1(tblStokItem, Barcode, KodeOutlet);
        }
        else if(rbNamaItem.isSelected()){
            String NamaItem = (((String)txtNamaItem.getText().trim()).toString());
            StokItem.getStokItem2(tblStokItem, NamaItem, KodeOutlet);
        }
        else if(rbKategori.isSelected()){
            int KodeKategori = (((Integer)ftxtKodeKategori.getValue()).intValue());
            StokItem.getStokItem4(tblStokItem, KodeKategori, KodeOutlet);
        }
        else if(rbSemua.isSelected()){
            StokItem.getStokItem5(tblStokItem, KodeOutlet);
        }
        else if(rbBarcode.isSelected() && cbStokMaximum.isSelected()){
            String Barcode = (((String)txtBarcode.getText().trim()).toString());
            StokItem.getStokMaximum1(tblStokItem, Barcode, KodeOutlet);
        }
        else if(rbNamaItem.isSelected() && cbStokMaximum.isSelected()){
            String NamaItem = (((String)txtNamaItem.getText().trim()).toString());
            StokItem.getStokMaximum2(tblStokItem, NamaItem, KodeOutlet);
        }
        else if(rbKategori.isSelected() && cbStokMaximum.isSelected()){
            int KodeKategori = (((Integer)ftxtKodeKategori.getValue()).intValue());
            StokItem.getStokMaximum4(tblStokItem, KodeKategori, KodeOutlet);
        }
        else if(rbSemua.isSelected() && cbStokMinimum.isSelected()){
            StokItem.getStokMaximum5(tblStokItem, KodeOutlet);
        }
        else if(rbBarcode.isSelected() && cbStokMinimum.isSelected()){
            String Barcode = (((String)txtBarcode.getText().trim()).toString());
            StokItem.getStokMinimum1(tblStokItem, Barcode, KodeOutlet);
        }
        else if(rbNamaItem.isSelected() && cbStokMinimum.isSelected()){
            String NamaItem = (((String)txtNamaItem.getText().trim()).toString());
            StokItem.getStokMinimum2(tblStokItem, NamaItem, KodeOutlet);
        }
        else if(rbKategori.isSelected() && cbStokMinimum.isSelected()){
            int KodeKategori = (((Integer)ftxtKodeKategori.getValue()).intValue());
            StokItem.getStokMinimum4(tblStokItem, KodeKategori, KodeOutlet);
        }
        else if(rbSemua.isSelected() && cbStokMinimum.isSelected()){
            StokItem.getStokMinimum5(tblStokItem, KodeOutlet);
        }
        else if(rbBarcode.isSelected() && cbStokMinimum.isSelected() && cbStokMaximum.isSelected()){
            String Barcode = (((String)txtBarcode.getText().trim()).toString());
            StokItem.getStokMinMax1(tblStokItem, Barcode, KodeOutlet);
        }
        else if(rbNamaItem.isSelected() && cbStokMinimum.isSelected() && cbStokMaximum.isSelected()){
            String NamaItem = (((String)txtNamaItem.getText().trim()).toString());
            StokItem.getStokMinMax1(tblStokItem, NamaItem, KodeOutlet);
        }
        else if(rbKategori.isSelected() && cbStokMinimum.isSelected() && cbStokMaximum.isSelected()){
            int KodeKategori = (((Integer)ftxtKodeKategori.getValue()).intValue());
            StokItem.getStokMinMax4(tblStokItem, KodeKategori, KodeOutlet);
        }
        else if(rbSemua.isSelected() && cbStokMinimum.isSelected() && cbStokMaximum.isSelected()){
            StokItem.getStokMinMax5(tblStokItem, KodeOutlet);
        }
    }//GEN-LAST:event_btnTampilkanActionPerformed

    private void cboOutletItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboOutletItemStateChanged
        // TODO add your handling code here:
        String Outlet = (((String)cboOutlet.getSelectedItem()).toString());
        int Kode = Outlet.indexOf(' ');
        String KodeOutlet = Outlet.substring(0, Kode);
        ftxtKodeOutlet.setValue(Integer.valueOf(KodeOutlet));
    }//GEN-LAST:event_cboOutletItemStateChanged

    private void cboKategoriItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboKategoriItemStateChanged
        // TODO add your handling code here:
            String Kategori = ((String)cboKategori.getSelectedItem()).toString();
            int Kode = Kategori.indexOf(' ');
            String KodeKaetgori = Kategori.substring(0, Kode);
            int KodeKat = Integer.valueOf(KodeKaetgori);
            ftxtKodeKategori.setValue(new Integer(KodeKat));
    }//GEN-LAST:event_cboKategoriItemStateChanged

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        // TODO add your handling code here:
        String Path = "./Documents/Stok Item.csv";
        try {
            Tab.ExportTable(tblStokItem, Path);
            
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Data Berhasil Diexport");
        } 
        catch (Exception ex) {
            Logger.getLogger(DataStokItem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnExportActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgSelection;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnTampilkan;
    private javax.swing.JButton btnTutup;
    private javax.swing.JCheckBox cbStokMaximum;
    private javax.swing.JCheckBox cbStokMinimum;
    private javax.swing.JComboBox<String> cboKategori;
    private javax.swing.JComboBox<String> cboOutlet;
    private javax.swing.JFormattedTextField ftxtKodeKategori;
    private javax.swing.JFormattedTextField ftxtKodeOutlet;
    private javax.swing.JLabel lblOutlet;
    private javax.swing.JPanel pnlDataStokItem;
    private javax.swing.JRadioButton rbBarcode;
    private javax.swing.JRadioButton rbKategori;
    private javax.swing.JRadioButton rbNamaItem;
    private javax.swing.JRadioButton rbSemua;
    private javax.swing.JScrollPane scrlStokItem;
    private javax.swing.JTable tblStokItem;
    private javax.swing.JTextField txtBarcode;
    private javax.swing.JTextField txtNamaItem;
    // End of variables declaration//GEN-END:variables
}
