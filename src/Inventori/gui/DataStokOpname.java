/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inventori.gui;

import App.Outlet;
import Inventori.Items;
import Inventori.StokOpname;
import Util.BackgroundImage;
import Util.BackgroundPane;
import java.awt.BorderLayout;
import java.io.File;
import java.io.IOException;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

/**
 *
 * @author Yestin
 */
public class DataStokOpname extends javax.swing.JFrame {

    StokOpname SO = new StokOpname();
    Outlet Outlet = new Outlet();
    Items Item = new Items();
    BackgroundImage BI = new BackgroundImage();
    /**
     * Creates new form DataStokOpname
     */
    public DataStokOpname() {
        initComponents();
        setTitle("Stok Opname");
        BI.BackgroundJPanel(this, pnlDataStokOpname);
        Outlet.getOutlet(cboOutlet);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgPeriode = new javax.swing.ButtonGroup();
        pnlDataStokOpname = new javax.swing.JPanel();
        cboOutlet = new javax.swing.JComboBox<>();
        cbOutlet = new javax.swing.JCheckBox();
        cbBarcode = new javax.swing.JCheckBox();
        txtBarcode = new javax.swing.JTextField();
        rbHarian = new javax.swing.JRadioButton();
        dchHarian = new com.toedter.calendar.JDateChooser();
        rbPerTanggal = new javax.swing.JRadioButton();
        dchTglAwal = new com.toedter.calendar.JDateChooser();
        lblSD = new javax.swing.JLabel();
        dchTglAkhir = new com.toedter.calendar.JDateChooser();
        rbBulanan = new javax.swing.JRadioButton();
        mchBulanan = new com.toedter.calendar.JMonthChooser();
        ychBulanan = new com.toedter.calendar.JYearChooser();
        btnTampilkan = new javax.swing.JButton();
        scrlStokOpname = new javax.swing.JScrollPane();
        tblStokOpname = new javax.swing.JTable();
        ftxtGrandTotalStokOpname = new javax.swing.JFormattedTextField();
        lblGrandTotalStokOpname = new javax.swing.JLabel();
        ftxtGrandTotalKerugian = new javax.swing.JFormattedTextField();
        lblGrandTotalKerugian = new javax.swing.JLabel();
        btnTutup = new javax.swing.JButton();
        ftxtKodeOutlet = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        cboOutlet.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cboOutlet.setEnabled(false);
        cboOutlet.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboOutletItemStateChanged(evt);
            }
        });

        cbOutlet.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbOutlet.setForeground(new java.awt.Color(0, 0, 255));
        cbOutlet.setText("Outlet :");
        cbOutlet.setOpaque(false);
        cbOutlet.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbOutletItemStateChanged(evt);
            }
        });

        cbBarcode.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbBarcode.setForeground(new java.awt.Color(0, 0, 255));
        cbBarcode.setText("Barcode :");
        cbBarcode.setOpaque(false);
        cbBarcode.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbBarcodeItemStateChanged(evt);
            }
        });

        txtBarcode.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtBarcode.setForeground(new java.awt.Color(0, 0, 255));
        txtBarcode.setEnabled(false);

        bgPeriode.add(rbHarian);
        rbHarian.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbHarian.setForeground(new java.awt.Color(0, 0, 255));
        rbHarian.setSelected(true);
        rbHarian.setText("Harian :");
        rbHarian.setOpaque(false);
        rbHarian.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbHarianItemStateChanged(evt);
            }
        });

        bgPeriode.add(rbPerTanggal);
        rbPerTanggal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbPerTanggal.setForeground(new java.awt.Color(0, 0, 255));
        rbPerTanggal.setText("Per Tanggal :");
        rbPerTanggal.setOpaque(false);
        rbPerTanggal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbPerTanggalItemStateChanged(evt);
            }
        });

        lblSD.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblSD.setForeground(new java.awt.Color(0, 0, 255));
        lblSD.setText("s/d");

        bgPeriode.add(rbBulanan);
        rbBulanan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbBulanan.setForeground(new java.awt.Color(0, 0, 255));
        rbBulanan.setText("Bulanan :");
        rbBulanan.setOpaque(false);
        rbBulanan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbBulananItemStateChanged(evt);
            }
        });

        mchBulanan.setForeground(new java.awt.Color(0, 0, 255));
        mchBulanan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        btnTampilkan.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Tampilkan.png"))); // NOI18N
        btnTampilkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTampilkanActionPerformed(evt);
            }
        });

        scrlStokOpname.setViewportView(tblStokOpname);

        ftxtGrandTotalStokOpname.setEditable(false);
        ftxtGrandTotalStokOpname.setForeground(new java.awt.Color(0, 0, 255));
        ftxtGrandTotalStokOpname.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ftxtGrandTotalStokOpname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblGrandTotalStokOpname.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblGrandTotalStokOpname.setForeground(new java.awt.Color(0, 0, 255));
        lblGrandTotalStokOpname.setText("Grand Total Stok Opname :");

        ftxtGrandTotalKerugian.setEditable(false);
        ftxtGrandTotalKerugian.setForeground(new java.awt.Color(0, 0, 255));
        ftxtGrandTotalKerugian.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        lblGrandTotalKerugian.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblGrandTotalKerugian.setForeground(new java.awt.Color(0, 0, 255));
        lblGrandTotalKerugian.setText("Grand Total Kerugian :");

        btnTutup.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnTutup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Tutup.png"))); // NOI18N

        ftxtKodeOutlet.setEditable(false);
        ftxtKodeOutlet.setForeground(new java.awt.Color(0, 0, 255));
        ftxtKodeOutlet.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout pnlDataStokOpnameLayout = new javax.swing.GroupLayout(pnlDataStokOpname);
        pnlDataStokOpname.setLayout(pnlDataStokOpnameLayout);
        pnlDataStokOpnameLayout.setHorizontalGroup(
            pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrlStokOpname)
            .addGroup(pnlDataStokOpnameLayout.createSequentialGroup()
                .addGroup(pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDataStokOpnameLayout.createSequentialGroup()
                        .addGroup(pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDataStokOpnameLayout.createSequentialGroup()
                                .addGap(75, 75, 75)
                                .addGroup(pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbOutlet)
                                    .addComponent(cbBarcode))
                                .addGap(24, 24, 24)
                                .addGroup(pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(cboOutlet, 0, 355, Short.MAX_VALUE)
                                        .addComponent(txtBarcode))
                                    .addComponent(ftxtKodeOutlet, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(67, 67, 67)
                                .addGroup(pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(rbPerTanggal)
                                    .addComponent(rbHarian)
                                    .addComponent(rbBulanan))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlDataStokOpnameLayout.createSequentialGroup()
                                        .addGroup(pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(dchHarian, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                            .addComponent(dchTglAwal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblSD)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(dchTglAkhir, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlDataStokOpnameLayout.createSequentialGroup()
                                        .addComponent(mchBulanan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(ychBulanan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(pnlDataStokOpnameLayout.createSequentialGroup()
                                .addGap(500, 500, 500)
                                .addComponent(btnTampilkan)))
                        .addGap(0, 147, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDataStokOpnameLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblGrandTotalStokOpname, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblGrandTotalKerugian, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ftxtGrandTotalKerugian, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                            .addComponent(ftxtGrandTotalStokOpname, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDataStokOpnameLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnTutup)
                .addGap(111, 111, 111))
        );
        pnlDataStokOpnameLayout.setVerticalGroup(
            pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDataStokOpnameLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cboOutlet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cbOutlet)
                        .addComponent(rbHarian))
                    .addComponent(dchHarian, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(dchTglAwal, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbBarcode)
                        .addComponent(txtBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rbPerTanggal))
                    .addComponent(lblSD, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dchTglAkhir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbBulanan)
                    .addComponent(mchBulanan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ychBulanan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ftxtKodeOutlet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addComponent(btnTampilkan)
                .addGap(29, 29, 29)
                .addComponent(scrlStokOpname, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftxtGrandTotalStokOpname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGrandTotalStokOpname))
                .addGap(18, 18, 18)
                .addGroup(pnlDataStokOpnameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftxtGrandTotalKerugian, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGrandTotalKerugian))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 90, Short.MAX_VALUE)
                .addComponent(btnTutup)
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlDataStokOpname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlDataStokOpname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbOutletItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbOutletItemStateChanged
        // TODO add your handling code here:
        if(cbOutlet.isSelected()==true){
            cboOutlet.setEnabled(true);
        }
        else if(cbOutlet.isSelected()==false){
            cboOutlet.setEnabled(false);
        }
    }//GEN-LAST:event_cbOutletItemStateChanged

    private void cbBarcodeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbBarcodeItemStateChanged
        // TODO add your handling code here:
        if(cbBarcode.isSelected()==true){
            txtBarcode.setEnabled(true);
        }
        else if(cbBarcode.isSelected()==false){
            txtBarcode.setEnabled(false);
        }
    }//GEN-LAST:event_cbBarcodeItemStateChanged

    private void rbHarianItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbHarianItemStateChanged
        // TODO add your handling code here:
        dchHarian.setEnabled(true);
        dchTglAwal.setEnabled(false);
        dchTglAkhir.setEnabled(false);
        mchBulanan.setEnabled(false);
        ychBulanan.setEnabled(false);
    }//GEN-LAST:event_rbHarianItemStateChanged

    private void rbPerTanggalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbPerTanggalItemStateChanged
        // TODO add your handling code here:
        dchHarian.setEnabled(false);
        dchTglAwal.setEnabled(true);
        dchTglAkhir.setEnabled(true);
        mchBulanan.setEnabled(false);
        ychBulanan.setEnabled(false);
    }//GEN-LAST:event_rbPerTanggalItemStateChanged

    private void rbBulananItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbBulananItemStateChanged
        // TODO add your handling code here:
        dchHarian.setEnabled(false);
        dchTglAwal.setEnabled(false);
        dchTglAkhir.setEnabled(false);
        mchBulanan.setEnabled(true);
        ychBulanan.setEnabled(true);
    }//GEN-LAST:event_rbBulananItemStateChanged

    private void btnTampilkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTampilkanActionPerformed
        // TODO add your handling code here:
        Calendar Tanggal = dchHarian.getCalendar();
        Calendar TglAwal = dchTglAwal.getCalendar();
        Calendar TglAkhir = dchTglAkhir.getCalendar();
        int Bulan = mchBulanan.getMonth()+1;
        int Tahun = ychBulanan.getYear();
        if(cbOutlet.isSelected()==true && cbBarcode.isSelected()==true){
            int KodeOutlet = (((Integer)ftxtKodeOutlet.getValue()).intValue());
            String Barcode = (((String)txtBarcode.getText().trim()).toString());
            if(rbHarian.isSelected()){
                SO.getStokOpname(tblStokOpname, Barcode, KodeOutlet, Tanggal);
            }
            else if(rbPerTanggal.isSelected()){
                SO.getStokOpname(tblStokOpname, Barcode, KodeOutlet, TglAwal, TglAkhir);
            }
            else if(rbBulanan.isSelected()){
                SO.getStokOpname(tblStokOpname, Barcode, KodeOutlet, Bulan, Tahun);
            }
        }
        else if(cbOutlet.isSelected()==true && cbBarcode.isSelected()==false){
            int KodeOutlet = (((Integer)ftxtKodeOutlet.getValue()).intValue());
            if(rbHarian.isSelected()){
                SO.getStokOpname(tblStokOpname, KodeOutlet, Tanggal);
            }
            else if(rbPerTanggal.isSelected()){
                SO.getStokOpname(tblStokOpname, KodeOutlet, TglAwal, TglAkhir);
            }
            else if(rbBulanan.isSelected()){
                SO.getStokOpname(tblStokOpname, KodeOutlet, Bulan, Tahun);
            }
        }
        else if(cbOutlet.isSelected()==false && cbBarcode.isSelected()==true){
            String Barcode = (((String)txtBarcode.getText().trim()).toString());
            if(rbHarian.isSelected()){
                SO.getStokOpname(tblStokOpname, Barcode, Tanggal);
            }
            else if(rbPerTanggal.isSelected()){
                SO.getStokOpname(tblStokOpname, Barcode, TglAwal, TglAkhir);
            }
            else if(rbBulanan.isSelected()){
                SO.getStokOpname(tblStokOpname, Barcode, Bulan, Tahun);
            }
        }
        else if(cbOutlet.isSelected()==false && cbBarcode.isSelected()==false){
            if(rbHarian.isSelected()){
                SO.getStokOpname(tblStokOpname, Tanggal);
            }
            else if(rbPerTanggal.isSelected()){
                SO.getStokOpname(tblStokOpname, TglAwal, TglAkhir);
            }
            else if(rbBulanan.isSelected()){
                SO.getStokOpname(tblStokOpname, Bulan, Tahun);
            }
        }
    }//GEN-LAST:event_btnTampilkanActionPerformed

    private void cboOutletItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboOutletItemStateChanged
        // TODO add your handling code here:
        String Outlet = (((String)cboOutlet.getSelectedItem()).toString());
        int Kode = Outlet.indexOf(' ');
        String KodeOutlet = Outlet.substring(0, Kode);
        ftxtKodeOutlet.setValue(Integer.valueOf(KodeOutlet));
    }//GEN-LAST:event_cboOutletItemStateChanged

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgPeriode;
    private javax.swing.JButton btnTampilkan;
    private javax.swing.JButton btnTutup;
    private javax.swing.JCheckBox cbBarcode;
    private javax.swing.JCheckBox cbOutlet;
    private javax.swing.JComboBox<String> cboOutlet;
    private com.toedter.calendar.JDateChooser dchHarian;
    private com.toedter.calendar.JDateChooser dchTglAkhir;
    private com.toedter.calendar.JDateChooser dchTglAwal;
    private javax.swing.JFormattedTextField ftxtGrandTotalKerugian;
    private javax.swing.JFormattedTextField ftxtGrandTotalStokOpname;
    private javax.swing.JFormattedTextField ftxtKodeOutlet;
    private javax.swing.JLabel lblGrandTotalKerugian;
    private javax.swing.JLabel lblGrandTotalStokOpname;
    private javax.swing.JLabel lblSD;
    private com.toedter.calendar.JMonthChooser mchBulanan;
    private javax.swing.JPanel pnlDataStokOpname;
    private javax.swing.JRadioButton rbBulanan;
    private javax.swing.JRadioButton rbHarian;
    private javax.swing.JRadioButton rbPerTanggal;
    private javax.swing.JScrollPane scrlStokOpname;
    private javax.swing.JTable tblStokOpname;
    private javax.swing.JTextField txtBarcode;
    private com.toedter.calendar.JYearChooser ychBulanan;
    // End of variables declaration//GEN-END:variables
}
