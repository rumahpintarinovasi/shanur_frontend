/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package HumanResource.gui;

import App.gui.MainForms;
import static App.Main.m_mainForm;
import HumanResource.Akses;
import HumanResource.Sift;
import HumanResource.User;
import Inventori.gui.RegistrasiKategori;
import Util.BackgroundImage;
import Util.BackgroundPane;
import Util.DBConnector;
import java.awt.BorderLayout;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

/**
 *
 * @author Yestin
 */
public class Login extends javax.swing.JFrame {

    User Usr = new User();
    Akses Aks = new Akses();
    MainForms MF = new MainForms();
    Sift Sift = new Sift();
    BackgroundImage BI = new BackgroundImage();
    /**
     * Creates new form Login
     */
    public Login() {
        initComponents();
        setTitle("Login");
        txtUsername.setText(new String());
        txtUsername.setText(null);
        BI.BackgroundJPanel(this, pnlLogin);
        
//        int LastSift = Sift.getLastSift();
        int JmlhSift = Sift.getJumlahSift();
        
        if(JmlhSift==1){
            Sift.getSift1(ftxtSift, 1);
        }
        else if(JmlhSift==2){
            Sift.getSift2(ftxtSift, 1, 2);
        }
        else if(JmlhSift==3){
            Sift.getSift3(ftxtSift, 1, 2, 3);
        }
        else if(JmlhSift==4){
            Sift.getSift4(ftxtSift, 1, 2, 3, 4);
        }
        else if(JmlhSift==5){
            Sift.getSift5(ftxtSift, 1, 2, 3, 4, 5);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlLogin = new javax.swing.JPanel();
        lblUsername = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        pswPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        btnTutup = new javax.swing.JButton();
        ftxtSift = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblUsername.setBackground(new java.awt.Color(255, 255, 255));
        lblUsername.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(0, 0, 255));
        lblUsername.setText("Username :");

        txtUsername.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtUsername.setForeground(new java.awt.Color(0, 0, 255));

        lblPassword.setBackground(new java.awt.Color(255, 255, 255));
        lblPassword.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblPassword.setForeground(new java.awt.Color(0, 0, 255));
        lblPassword.setText("Password :");

        pswPassword.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        pswPassword.setForeground(new java.awt.Color(0, 0, 255));

        btnLogin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon2/Login.png"))); // NOI18N
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        btnTutup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon2/Tutup.png"))); // NOI18N

        ftxtSift.setEditable(false);
        ftxtSift.setForeground(new java.awt.Color(0, 0, 255));
        ftxtSift.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Sift :");

        javax.swing.GroupLayout pnlLoginLayout = new javax.swing.GroupLayout(pnlLogin);
        pnlLogin.setLayout(pnlLoginLayout);
        pnlLoginLayout.setHorizontalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLoginLayout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(btnLogin)
                        .addGap(69, 69, 69)
                        .addComponent(btnTutup))
                    .addGroup(pnlLoginLayout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsername)
                            .addComponent(lblPassword))
                        .addGap(64, 64, 64)
                        .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsername)
                            .addComponent(pswPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(111, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLoginLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(ftxtSift, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
        pnlLoginLayout.setVerticalGroup(
            pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLoginLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftxtSift, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 76, Short.MAX_VALUE)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(pswPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(83, 83, 83)
                .addGroup(pnlLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnLogin)
                    .addComponent(btnTutup))
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        if(txtUsername.getText().trim().length()==0){
            JOptionPane.showMessageDialog(this, "Username Belum Diisi");
            return;
        }
        if(pswPassword.getPassword().length==0){
            JOptionPane.showMessageDialog(this, "Password Belum Diisi");
            return;
        }
        
        String Username = String.valueOf(txtUsername.getText().trim());
        String Password = String.valueOf(pswPassword.getPassword());
        
        try {
            Usr = User.ValidateUserLoginSHA2(Password, Username);
            
            
            if(Usr != null){
                
                int KodeUser = Usr.getKodeUser(Username, Password);
                m_mainForm.mKodeUser.setText(String.valueOf(KodeUser));
                
                int KodeOutlet = Usr.getKodeOutlet(KodeUser);
                m_mainForm.mKodeOutlet.setText(String.valueOf(KodeOutlet));
                
//                int Sft = (((Integer)ftxtSift.getValue()).intValue());
//                m_mainForm.mSift.setText(String.valueOf(Sft));
                
                int KodeAksesInventori = Aks.getKodeAkses(KodeUser, "Inventori");
                int AksesInventori = Aks.getAkses(KodeAksesInventori);
                if(AksesInventori==1){
                    m_mainForm.mInventori.setVisible(true);
                }
                else if(AksesInventori==2){
                    m_mainForm.mInventori.setVisible(false);
                }
                
                int KodeAksesRegistrasiKategori = Aks.getKodeAkses(KodeUser, "Registrasi Kategori");
                int AksesRegistrasiKategori = Aks.getAkses(KodeAksesRegistrasiKategori);
                if(AksesRegistrasiKategori==1){
                    m_mainForm.miRegistrasiKategori.setVisible(true);
                }
                else if(AksesRegistrasiKategori==2){
                    m_mainForm.miRegistrasiKategori.setVisible(false);
                }
                
                int KodeAksesDaftarKategori = Aks.getKodeAkses(KodeUser, "Daftar Kategori");
                int AksesDaftarKategori = Aks.getAkses(KodeAksesDaftarKategori);
                if(AksesDaftarKategori==1){
                    m_mainForm.miDaftarKategori.setVisible(true);
                }
                else if(AksesDaftarKategori==2){
                    m_mainForm.miDaftarKategori.setVisible(false);
                }
                
                int KodeAksesRegistrasiMerek = Aks.getKodeAkses(KodeUser, "Registrasi Merek");
                int AksesRegistrasiMerek = Aks.getAkses(KodeAksesRegistrasiMerek);
                if(AksesRegistrasiMerek==1){
                    m_mainForm.miRegistrasiMerek.setVisible(true);
                }
                else if(AksesRegistrasiMerek==2){
                    m_mainForm.miRegistrasiMerek.setVisible(false);
                }
                
                int KodeAksesDaftarMerek = Aks.getKodeAkses(KodeUser, "Daftar Merek");
                int AksesDaftarMerek = Aks.getAkses(KodeAksesDaftarMerek);
                if(AksesDaftarMerek==1){
                    m_mainForm.miDaftarMerek.setVisible(true);
                }
                else if(AksesDaftarMerek==2){
                    m_mainForm.miDaftarMerek.setVisible(false);
                }
                
                int KodeAksesRegistrasiSatuan = Aks.getKodeAkses(KodeUser, "Registrasi Satuan");
                int AksesRegistrasiSatuan = Aks.getAkses(KodeAksesRegistrasiSatuan);
                if(AksesRegistrasiSatuan==1){
                    m_mainForm.miRegistrasiSatuan.setVisible(true);
                }
                else if(AksesRegistrasiSatuan==2){
                    m_mainForm.miRegistrasiSatuan.setVisible(false);
                }
                
                int KodeAksesDaftarSatuan = Aks.getKodeAkses(KodeUser, "Daftar Satuan");
                int AksesDaftarSatuan = Aks.getAkses(KodeAksesDaftarSatuan);
                if(AksesDaftarSatuan==1){
                    m_mainForm.miDaftarSatuan.setVisible(true);
                }
                else if(AksesDaftarSatuan==2){
                    m_mainForm.miDaftarSatuan.setVisible(false);
                }
                
                int KodeAksesRegistrasiItem = Aks.getKodeAkses(KodeUser, "Registrasi Item");
                int AksesRegistrasiItem = Aks.getAkses(KodeAksesRegistrasiItem);
                if(AksesRegistrasiItem==1){
                    m_mainForm.miRegistrasiItem.setVisible(true);
                }
                else if(AksesRegistrasiItem==2){
                    m_mainForm.miRegistrasiItem.setVisible(false);
                }
                
                int KodeAksesDaftarItem = Aks.getKodeAkses(KodeUser, "Daftar Item");
                int AksesDaftarItem = Aks.getAkses(KodeAksesDaftarItem);
                if(AksesDaftarItem==1){
                    m_mainForm.miDaftarItem.setVisible(true);
                }
                else if(AksesDaftarItem==2){
                    m_mainForm.miDaftarItem.setVisible(false);
                }
                
                int KodeAksesPenerimaanBarang = Aks.getKodeAkses(KodeUser, "Penerimaan Barang");
                int AksesPenerimaanBarang = Aks.getAkses(KodeAksesPenerimaanBarang);
                if(AksesPenerimaanBarang==1){
                    m_mainForm.miPenerimaanBarangSupplier.setVisible(true);
                }
                else if(AksesPenerimaanBarang==2){
                    m_mainForm.miPenerimaanBarangSupplier.setVisible(false);
                }
                
                int KodeAksesPengecekanStokItem = Aks.getKodeAkses(KodeUser, "Data Stok Item");
                int AksesPengecekanStokItem = Aks.getAkses(KodeAksesPengecekanStokItem);
                if(AksesPengecekanStokItem==1){
                    m_mainForm.miDataStokItem.setVisible(true);
                }
                else if(AksesPengecekanStokItem==2){
                    m_mainForm.miDataStokItem.setVisible(false);
                }
                
                int KodeAksesInputStokOpname = Aks.getKodeAkses(KodeUser, "Input Stok Opname");
                int AksesInputStokOpname = Aks.getAkses(KodeAksesInputStokOpname);
                if(AksesInputStokOpname==1){
                    m_mainForm.miPengimputanStokOpname.setVisible(true);
                }
                else if(AksesInputStokOpname==2){
                    m_mainForm.miPengimputanStokOpname.setVisible(false);
                }
                
                int KodeAksesDataStokOpname = Aks.getKodeAkses(KodeUser, "Data Stok Opname");
                int AksesDataStokOpname = Aks.getAkses(KodeAksesInputStokOpname);
                if(AksesDataStokOpname==1){
                    m_mainForm.miDataStokOpname.setVisible(true);
                }
                else if(AksesDataStokOpname==2){
                    m_mainForm.miDataStokOpname.setVisible(false);
                }
                
                int KodeAksesHistoriStokItem = Aks.getKodeAkses(KodeUser, "Histori Stok Item");
                int AksesHistoriStokItem = Aks.getAkses(KodeAksesHistoriStokItem);
                if(AksesHistoriStokItem==1){
                    m_mainForm.miHistoriStokItem.setVisible(true);
                }
                else if(AksesHistoriStokItem==2){
                    m_mainForm.miHistoriStokItem.setVisible(false);
                }
                
                int KodeAksesPenguranganStokItem = Aks.getKodeAkses(KodeUser, "Pengurangan Stok Item");
                int AksesPenguranganStokItem = Aks.getKodeAkses(KodeUser, "Pengurangan Stok Item");
                if(AksesPenguranganStokItem==1){
                    m_mainForm.miPenguranganStok.setVisible(true);
                }
                else if(AksesPenguranganStokItem==2){
                    m_mainForm.miPenguranganStok.setVisible(false);
                }
                
                int KodeAksesTransaksi = Aks.getKodeAkses(KodeUser, "Transaksi");
                int AksesTransaksi = Aks.getAkses(KodeAksesTransaksi);
                if(AksesTransaksi==1){
                    m_mainForm.mTransaksi.setVisible(true);
                }
                else if(AksesTransaksi==2){
                    m_mainForm.mTransaksi.setVisible(false);
                }
                
                int KodeAksesPenjualanItem = Aks.getKodeAkses(KodeUser, "Penjualan Item");
                int AksesPenjualanItem = Aks.getAkses(KodeAksesPenjualanItem);
                if(AksesPenjualanItem==1){
                    m_mainForm.miPenjualanTunai.setVisible(true);
                }
                else if(AksesPenjualanItem==2){
                    m_mainForm.miPenjualanTunai.setVisible(false);
                }
                
                int KodeAksesSetKasAwal = Aks.getKodeAkses(KodeUser, "Set Kas Awal");
                int AksesSetKasAwal = Aks.getAkses(KodeAksesSetKasAwal);
                if(AksesSetKasAwal==1){
                    m_mainForm.miSetKasAwal.setVisible(true);
                }
                else if(AksesSetKasAwal==2){
                    m_mainForm.miSetKasAwal.setVisible(false);
                }
                
                int KodeAksesLaba = Aks.getKodeAkses(KodeUser, "Laba");
                int AksesLaba = Aks.getAkses(KodeAksesLaba);
                if(AksesLaba==1){
                    m_mainForm.miLaba.setVisible(true);
                }
                else if(AksesLaba==2){
                    m_mainForm.miLaba.setVisible(false);
                }
                
                int KodeAksesDataTransaksi = Aks.getKodeAkses(KodeUser, "Data Transaksi");
                int AksesDataTransaksi = Aks.getAkses(KodeAksesDataTransaksi);
                if(AksesDataTransaksi==1){
                    m_mainForm.miDataTransaksi.setVisible(true);
                }
                else if(AksesDataTransaksi==2){
                    m_mainForm.miDataTransaksi.setVisible(false);
                }
                
                int KodeAksesPelunasan = Aks.getKodeAkses(KodeUser, "Pelunasan");
                int AksesPelunasan = Aks.getAkses(KodeAksesPelunasan);
                if(AksesPelunasan==1){
                    m_mainForm.miPelunasan.setVisible(true);
                }
                else if(AksesPelunasan==2){
                    m_mainForm.miPelunasan.setVisible(false);
                }
                
                int KodeAksesAdministrasi = Aks.getKodeAkses(KodeUser, "Administrasi");
                int AksesAdmnistrasi = Aks.getAkses(KodeAksesAdministrasi);
                if(AksesAdmnistrasi==1){
                    m_mainForm.mAdministrasi.setVisible(true);
                }
                else if(AksesAdmnistrasi==2){
                    m_mainForm.mAdministrasi.setVisible(false);
                }
                
                int KodeAksesPengimputanFaktur = Aks.getKodeAkses(KodeUser, "Pengimputan Faktur Pembelian");
                int AksesPengimputanFaktur = Aks.getAkses(KodeAksesPengimputanFaktur);
                if(AksesPengimputanFaktur==1){
                    m_mainForm.miPengimputanFakturPembelian.setVisible(true);
                }
                else if(AksesPengimputanFaktur==1){
                    m_mainForm.miPengimputanFakturPembelian.setVisible(false);
                }
                
                int KodeAksesRegistarasiBC = Aks.getKodeAkses(KodeUser, "Registrasi Business Contact");
                int AksesRegistrasiBC = Aks.getAkses(KodeAksesRegistarasiBC);
                if(AksesRegistrasiBC==1){
                    m_mainForm.miRegistrasiSupplier.setVisible(true);
                }
                else if(AksesRegistrasiBC==2){
                    m_mainForm.miRegistrasiSupplier.setVisible(false);
                }
                
                int KodeAksesDaftarBC = Aks.getKodeAkses(KodeUser, "Daftar Business Contact");
                int AksesDaftarBC = Aks.getAkses(KodeAksesDaftarBC);
                if(AksesDaftarBC==1){
                    m_mainForm.miDataSupplier.setVisible(true);
                }
                else if(AksesDaftarBC==2){
                    m_mainForm.miDataSupplier.setVisible(false);
                }
                
                int KodeAksesPembuatanBarcode = Aks.getKodeAkses(KodeUser, "Pencetakan Barcode");
                int AksesPembuatanBarcode = Aks.getAkses(KodeAksesPembuatanBarcode);
                if(AksesPembuatanBarcode==1){
                    m_mainForm.miPencetakanBarcode.setVisible(true);
                }
                else if(AksesPembuatanBarcode==2){
                    m_mainForm.miPencetakanBarcode.setVisible(false);
                }
                
                int KodeAksesSetNamaBisnis = Aks.getKodeAkses(KodeUser, "Set Nama Bisnis");
                int AksesSetNamaBisnis = Aks.getAkses(KodeAksesSetNamaBisnis);
                if(AksesSetNamaBisnis==1){
                    m_mainForm.miSetNamaBisnis.setVisible(true);
                }
                else if(AksesSetNamaBisnis==2){
                    m_mainForm.miSetNamaBisnis.setVisible(false);
                }
                
                int KodeAksesRegistrasiOutlet = Aks.getKodeAkses(KodeUser, "Registrasi Outlet");
                int AksesRegistrasiOutlet = Aks.getAkses(KodeAksesRegistrasiOutlet);
                if(AksesRegistrasiOutlet==1){
                    m_mainForm.miRegistrasiOutlet.setVisible(true);
                }
                else if(AksesRegistrasiOutlet==2){
                    m_mainForm.miRegistrasiOutlet.setVisible(false);
                }
                
                int KodeAksesDaftarOutlet = Aks.getKodeAkses(KodeUser, "Daftar Outlet");
                int AksesDaftarOutlet = Aks.getAkses(KodeAksesDaftarOutlet);
                if(AksesDaftarOutlet==1){
                    m_mainForm.miDaftarOutlet.setVisible(true);
                }
                else{
                    m_mainForm.miDaftarOutlet.setVisible(false);
                }
                
                int KodeAksesRegistrasiJenisPembayaran = Aks.getKodeAkses(KodeUser, "Registrasi Jenis Pembayaran");
                int AksesRegistrasiJenisPembayaran = Aks.getAkses(KodeAksesRegistrasiJenisPembayaran);
                if(AksesRegistrasiJenisPembayaran==1){
                    m_mainForm.miRegistrasiJenisPembayaran.setVisible(true);
                }
                else if(AksesRegistrasiJenisPembayaran==2){
                    m_mainForm.miRegistrasiJenisPembayaran.setVisible(false);
                }
                
                int KodeAksesDaftarJenisPembayaran = Aks.getKodeAkses(KodeUser, "Daftar Jenis Pembayaran");
                int AksesDaftarJenisPembayaran = Aks.getAkses(KodeAksesDaftarJenisPembayaran);
                if(AksesDaftarJenisPembayaran==1){
                    m_mainForm.miDaftarJenisPembayaran.setVisible(true);
                }
                else if(AksesDaftarJenisPembayaran==2){
                    m_mainForm.miDaftarJenisPembayaran.setVisible(false);
                }
                
                int KodeAksesUser = Aks.getKodeAkses(KodeUser, "User");
                int AksesUser = Aks.getAkses(KodeAksesUser);
                if(AksesUser==1){
                    m_mainForm.mUser.setVisible(true);
                }
                else if(AksesUser==2){
                    m_mainForm.mUser.setVisible(false);
                }
                
                int KodeAksesRegistrasiUser = Aks.getKodeAkses(KodeUser, "Registrasi User");
                int AksesRegistrasiUser = Aks.getAkses(KodeAksesRegistrasiUser);
                if(AksesRegistrasiUser==1){
                    m_mainForm.miRegistrasiUser.setVisible(true);
                }
                else if(AksesRegistrasiUser==2){
                    m_mainForm.miRegistrasiUser.setVisible(false);
                }
                
                int KodeAksesDaftarUser = Aks.getKodeAkses(KodeUser, "Daftar User");
                int AksesDaftarUser = Aks.getAkses(KodeAksesDaftarUser);
                if(AksesDaftarUser==1){
                    m_mainForm.miDaftarUser.setVisible(true);
                }
                else if(AksesDaftarUser==2){
                    m_mainForm.miDaftarUser.setVisible(false);
                }
                
                int KodeAksesGantiUsernamePassword = Aks.getKodeAkses(KodeUser, "Ganti Username & Password");
                int AksesGantiUsernamePassword = Aks.getAkses(KodeAksesGantiUsernamePassword);
                if(AksesGantiUsernamePassword==1){
                    m_mainForm.miGantiUsernamePassword.setVisible(true);
                }
                else if(AksesGantiUsernamePassword==2){
                    m_mainForm.miGantiUsernamePassword.setVisible(false);
                }
                
                int KodeAksesRegistrasiJenisIdentitas = Aks.getKodeAkses(KodeUser, "Registrasi Jenis Identitas");
                int AksesRegistrasiJenisIdentitas = Aks.getAkses(KodeAksesRegistrasiJenisIdentitas);
                if(AksesRegistrasiJenisIdentitas==1){
                    m_mainForm.miRegistrasiJenisIdentitas.setVisible(true);
                }
                else if(AksesRegistrasiJenisIdentitas==2){
                    m_mainForm.miRegistrasiJenisIdentitas.setVisible(false);
                }
                
                int KodeAksesDaftarJenisIdentitas = Aks.getKodeAkses(KodeUser, "Daftar Jenis Identitas");
                int AksesDaftarJenisIdentitas = Aks.getAkses(KodeAksesDaftarJenisIdentitas);
                if(AksesDaftarJenisIdentitas==1){
                    m_mainForm.miDaftarJenisIdentitas.setVisible(true);
                }
                else if(AksesDaftarJenisIdentitas==2){
                    m_mainForm.miDaftarJenisIdentitas.setVisible(false);
                }
                
                int KodeAksesRegistrasiFitur = Aks.getKodeAkses(KodeUser, "Registrasi Fitur");
                int AksesRegistrasiFitur = Aks.getAkses(KodeAksesRegistrasiFitur);
                if(AksesRegistrasiFitur==1){
                    m_mainForm.miRegistrasiFitur.setVisible(true);
                }
                else if(AksesRegistrasiFitur==2){
                    m_mainForm.miRegistrasiFitur.setVisible(false);
                }
                
                int KodeAksesDaftarFitur = Aks.getKodeAkses(KodeUser, "Daftar Fitur");
                int AksesDaftarFitur = Aks.getAkses(KodeAksesDaftarFitur);
                if(AksesDaftarFitur==1){
                    m_mainForm.miDaftarFitur.setVisible(true);
                }
                else{
                    m_mainForm.miDaftarFitur.setVisible(false);
                }
                
                m_mainForm.miLogin.setVisible(false);
                m_mainForm.miLogout.setVisible(true);
                
                int KodeAksesFinancial = Aks.getKodeAkses(KodeUser, "Financial");
                int AksesFinancial = Aks.getAkses(KodeAksesFinancial);
                if(AksesFinancial==1){
                    m_mainForm.mFinancial.setVisible(true);
                }
                else if(AksesFinancial==2){
                    m_mainForm.mFinancial.setVisible(false);
                }
                
                int KodeAksesRegistrasiAkun = Aks.getKodeAkses(KodeUser, "Registrasi Akun");
                int AksesRegistrasiAkun = Aks.getAkses(KodeAksesRegistrasiAkun);
                if(AksesRegistrasiAkun==1){
                    m_mainForm.miRegistrasiAkun.setVisible(true);
                }
                else if(AksesRegistrasiAkun==2){
                    m_mainForm.miRegistrasiAkun.setVisible(false);
                }
                
                int KodeAksesDataAkun = Aks.getKodeAkses(KodeUser, "Data Akun");
                int AksesDataAkun = Aks.getAkses(KodeAksesDataAkun);
                if(AksesDataAkun==1){
                    m_mainForm.miDataAkun.setVisible(true);
                }
                else if(AksesDataAkun==2){
                    m_mainForm.miDataAkun.setVisible(false);
                }
                
                int KodeAksesPembuatanMuatsi = Aks.getKodeAkses(KodeUser, "Pembuatan Mutasi");
                int AksesPembuatanMutasi = Aks.getAkses(KodeAksesPembuatanMuatsi);
                if(AksesPembuatanMutasi==1){
                    m_mainForm.miPembuatanMutasi.setVisible(true);
                }
                else if(AksesPembuatanMutasi==2){
                    m_mainForm.miPembuatanMutasi.setVisible(false);
                }
                
                int KodeAksesDataMutasi = Aks.getKodeAkses(KodeUser, "Data Mutasi");
                int AksesDataMutasi = Aks.getAkses(KodeAksesDataMutasi);
                if(AksesDataMutasi==1){
                    m_mainForm.miDataMutasi.setVisible(true);
                }
                else if(AksesDataMutasi==2){
                    m_mainForm.miDataMutasi.setVisible(false);
                }
                
//                int KodeAksesPenerimaanDariGudang = Aks.getKodeAkses(KodeUser, "Penerimaan Barang Dari Gudang");
//                int AksesPenerimaanDariGudang = Aks.getAkses(KodeAksesPenerimaanDariGudang);
//                if(AksesPenerimaanDariGudang==1){
//                    m_mainForm.miPenerimaanBarangGudang.setVisible(true);
//                }
//                else if(AksesPenerimaanDariGudang==2){
//                    m_mainForm.miPenerimaanBarangGudang.setVisible(false);
//                }
                
                int KodeAksesTransferStok = Aks.getKodeAkses(KodeUser, "Transfer Stok");
                int AksesTransferStok = Aks.getAkses(KodeAksesTransferStok);
                if(AksesTransferStok==1){
                    m_mainForm.miTransferStok.setVisible(true);
                }
                else if(AksesTransferStok==2){
                    m_mainForm.miTransferStok.setVisible(false);
                }
                
                int KodeAksesHistoriTransferStok = Aks.getKodeAkses(KodeUser, "Histori Transfer Stok");
                int AksesHistoriTransferStok = Aks.getAkses(KodeAksesHistoriTransferStok);
                if(AksesHistoriTransferStok==1){
                    m_mainForm.miHistoriTransferStok.setVisible(true);
                }
                else if(AksesHistoriTransferStok==2){
                    m_mainForm.miHistoriTransferStok.setVisible(false);
                }
                
                int KodeAksesEdit = Aks.getKodeAkses(KodeUser, "Edit Akses");
                int AksesEdit = Aks.getAkses(KodeAksesEdit);
                if(AksesEdit==1){
                    m_mainForm.miEditAkses.setVisible(true);
                }
                else if(AksesEdit==2){
                    m_mainForm.miEditAkses.setVisible(false);
                }
                
                int KodeAksesRegistrasiJenisPekerjaan = Aks.getKodeAkses(KodeUser, "Registrasi Jenis Pekerjaan");
                int AksesRegistrasiJenisPekerjaan = Aks.getAkses(KodeAksesRegistrasiJenisPekerjaan);
                if(AksesRegistrasiJenisPekerjaan==1){
                    m_mainForm.miRegistrasiJenisPekerjaan.setVisible(true);
                }
                else if(AksesRegistrasiJenisPekerjaan==2){
                    m_mainForm.miRegistrasiJenisPekerjaan.setVisible(false);
                }
                
                int KodeAksesDaftarJenisPekerjaan = Aks.getKodeAkses(KodeUser, "Daftar Jenis Pekerjaan");
                int AksesDaftarJenisPekerjaan = Aks.getAkses(KodeAksesDaftarJenisPekerjaan);
                if(AksesDaftarJenisPekerjaan==1){
                    m_mainForm.miDaftarJenisPekerjaan.setVisible(true);
                }
                else if(AksesDaftarJenisPekerjaan==2){
                    m_mainForm.miDaftarJenisPekerjaan.setVisible(false);
                }
                
                int KodeAksesRegistrasiMobil = Aks.getKodeAkses(KodeUser, "Registrasi Mobil");
                int AksesRegistrasiMobil = Aks.getAkses(KodeAksesRegistrasiMobil);
                if(AksesRegistrasiMobil==1){
                    m_mainForm.miRegistrasiMobil.setVisible(true);
                }
                else if(AksesRegistrasiMobil==2){
                    m_mainForm.miRegistrasiMobil.setVisible(false);
                }
                
                int KodeAksesDataMobil = Aks.getKodeAkses(KodeUser, "Data Mobil");
                int AksesDataMobil = Aks.getAkses(KodeAksesDataMobil);
                if(AksesDataMobil==1){
                    m_mainForm.miDataMobil.setVisible(true);
                }
                else if(AksesDataMobil==2){
                    m_mainForm.miDataMobil.setVisible(false);
                }
                
                int KodeAksesRegistrasiPenyimpanan = Aks.getKodeAkses(KodeUser, "Registrasi Penyimpanan");
                int AksesRegistrasiPenyimpanan = Aks.getAkses(KodeAksesRegistrasiPenyimpanan);
                if(AksesRegistrasiPenyimpanan==1){
                    m_mainForm.miRegistrasiPenyimpanan.setVisible(true);
                }
                else if(AksesRegistrasiPenyimpanan==2){
                    m_mainForm.miRegistrasiPenyimpanan.setVisible(false);
                }
                
                int KodeAksesDataPenyimpanan = Aks.getKodeAkses(KodeUser, "Data Penyimpanan");
                int AksesDataPenyimpanan = Aks.getAkses(KodeAksesDataPenyimpanan);
                if(AksesDataPenyimpanan==1){
                    m_mainForm.miDataPenyimpanan.setVisible(true);
                }
                else if(AksesDataPenyimpanan==2){
                    m_mainForm.miDataPenyimpanan.setVisible(false);
                }
                
                int KodeAksesTambahSift = Aks.getKodeAkses(KodeUser, "Tambah Sift");
                int AksesTambahSift = Aks.getAkses(KodeAksesTambahSift);
                if(AksesTambahSift==1){
                    m_mainForm.miTambahSift.setVisible(true);
                }
                else if(AksesTambahSift==2){
                    m_mainForm.miTambahSift.setVisible(false);
                }
                
                int KodeAksesDataSift = Aks.getKodeAkses(KodeUser, "Data Sift");
                int AksesDataSift = Aks.getAkses(KodeAksesDataSift);
                if(AksesDataSift==1){
                    m_mainForm.miDaftarSift.setVisible(true);
                }
                else if(AksesDataSift==2){
                    m_mainForm.miDaftarSift.setVisible(false);
                }
                
                int KodeAksesDataPekerjaan = Aks.getKodeAkses(KodeUser, "Data Pekerjaan Pegawai");
                int AksesDataPekerjaan = Aks.getAkses(KodeAksesDataPekerjaan);
                if(AksesDataPekerjaan==1){
                    m_mainForm.miDataPekerjaan.setVisible(true);
                }
                else if(AksesDataPekerjaan==2){
                    m_mainForm.miDataPekerjaan.setVisible(false);
                }
                
                int KodeAksesKonfirmasiStok = Aks.getKodeAkses(KodeUser, "Konfirmasi Penerimaan Stok");
                int AksesKonfirmasiStok = Aks.getAkses(KodeAksesKonfirmasiStok);
                if(AksesKonfirmasiStok==1){
                    m_mainForm.miKonfirmasiPenerimaan.setVisible(true);
                }
                else if(AksesKonfirmasiStok==2){
                    m_mainForm.miKonfirmasiPenerimaan.setVisible(false);
                }
                
                int KodeAksesPenjualanKredit = Aks.getKodeAkses(KodeUser, "Penjualan Kredit");
                int AksesPenjualanKredit = Aks.getAkses(KodeAksesPenjualanKredit);
                if(AksesPenjualanKredit==1){
                    m_mainForm.miPenjualanKredit.setVisible(true);
                }
                else if(AksesPenjualanKredit==2){
                    m_mainForm.miPenjualanKredit.setVisible(false);
                }
                
                setVisible(false);
                dispose();
                Toolkit.getDefaultToolkit().beep();
            }
            else{
                JOptionPane.showMessageDialog(this, "Username atau Password tidak dikernal!");
                return;
            }
            
            DBConnector.getConnection().commit();
            Toolkit.getDefaultToolkit().beep();
        } 
        catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error Saat Login : "+e.getMessage(),
                    "Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        catch (Exception e){
            e.printStackTrace();
            return;
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnTutup;
    private javax.swing.JFormattedTextField ftxtSift;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPanel pnlLogin;
    private javax.swing.JPasswordField pswPassword;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
