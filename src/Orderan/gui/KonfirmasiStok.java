/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Orderan.gui;

import App.Outlet;
import HumanResource.Identitas;
import HumanResource.Pekerjaan;
import HumanResource.User;
import Orderan.Mobil;
import Orderan.RincianTransfer;
import Orderan.TransferStok;
import Transaksi.gui.DataTransaksi;
import Util.BackgroundPane;
import Util.DBConnector;
import Util.DoubleFormatTableAlignment;
import Util.Table;
import java.awt.BorderLayout;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;

/**
 *
 * @author Yestin
 */
public class KonfirmasiStok extends javax.swing.JFrame {

    TransferStok TS = new TransferStok();
    RincianTransfer Rincian = new RincianTransfer();
    User Usr = new User();
    Identitas Id = new Identitas();
    Pekerjaan Kerja = new Pekerjaan();
    Mobil Mobil = new Mobil();
    Outlet Outlet = new Outlet();
    Table Tab = new Table();
    RincianTransfer RincianTransfer[];
    
    int Left = SwingConstants.LEFT;
    int Center = SwingConstants.CENTER;
    int Right = SwingConstants.RIGHT;
    /**
     * Creates new form KonfirmasiStok
     */
    public KonfirmasiStok() {
        initComponents();
        setTitle("Konfirmasi Penerimaan Stok");
        try {
            BackgroundPane Background = new BackgroundPane();
            Background.setBackground(ImageIO.read(new File("\\E-POS\\Green Background 37.jpeg")));
            Background.setLayout(new BorderLayout());
            pnlKonfirmasiStok.setOpaque(false);
            Background.add(pnlKonfirmasiStok,BorderLayout.CENTER);
            this.setLayout(new BorderLayout());
            this.add(Background, BorderLayout.CENTER);
        }
        catch (IOException e) {
            Logger.getLogger(DataTransaksi.class.getName()).log(Level.SEVERE, null, e);
        }
        dchTanggal.setCalendar(Calendar.getInstance());
        ftxtBiaya.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter
                    (new DecimalFormat("#,##0"))));
        ftxtBiaya.setValue(new Double(0.00));
        ftxtKodeOutlet.setVisible(false);
        ftxtKodeUser.setVisible(false);
        InitTableRincianTransfer();
        Tab.TableAlignment7(tblRincianTransfer, Left, Left, Center, Center, Center, Right, Right, Center);
        NumberFormatTable();
    }
    
    private void InitTableRincianTransfer(){
        tblRincianTransfer.setModel(new DefaultTableModel(){
            String ColName[] = {"Barcode","Nama Item","Satuan","Stok Dikirim","Stok Diterima","Harga Modal","Total Modal"};
            Class ColType[] = {String.class,String.class,String.class,Double.class,Double.class,Double.class,Double.class};
                
            @Override
            public Class<?> getColumnClass(int ColIndex){
                return ColType[ColIndex];
            }
            
            @Override
            public String getColumnName(int ColIndex){
                return ColName[ColIndex];
            }
            @Override
            public int getColumnCount(){
                return 7;
            }
        });
        
        tblRincianTransfer.getColumnModel().getColumn(0).setPreferredWidth(60);
        tblRincianTransfer.getColumnModel().getColumn(1).setPreferredWidth(150);
        tblRincianTransfer.getColumnModel().getColumn(2).setPreferredWidth(50);
        tblRincianTransfer.getColumnModel().getColumn(3).setPreferredWidth(70);
        tblRincianTransfer.getColumnModel().getColumn(4).setPreferredWidth(100);
        tblRincianTransfer.getColumnModel().getColumn(5).setPreferredWidth(100);
        tblRincianTransfer.getColumnModel().getColumn(6).setPreferredWidth(100);
    }
    
    private void NumberFormatTable(){
        DoubleFormatTableAlignment dfta = new DoubleFormatTableAlignment();
        
        tblRincianTransfer.getColumnModel().getColumn(5).setCellRenderer(dfta);
        tblRincianTransfer.getColumnModel().getColumn(6).setCellRenderer(dfta);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlKonfirmasiStok = new javax.swing.JPanel();
        lblKodeTF = new javax.swing.JLabel();
        ftxtKodeTF = new javax.swing.JFormattedTextField();
        lblTanggal = new javax.swing.JLabel();
        dchTanggal = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        txtDriver = new javax.swing.JTextField();
        lblMobil = new javax.swing.JLabel();
        txtMobil = new javax.swing.JTextField();
        lblOutletAsal = new javax.swing.JLabel();
        txtOutletAsal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtOutletTujuan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cboStatusDelivery = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        ftxtBiaya = new javax.swing.JFormattedTextField();
        txtKeterangan = new javax.swing.JTextField();
        scrlRincianTransfer = new javax.swing.JScrollPane();
        tblRincianTransfer = new javax.swing.JTable();
        ftxtGrandTotal = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        btnKonfirmasi = new javax.swing.JButton();
        ftxtBatal = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtPengirim = new javax.swing.JTextField();
        ftxtKodeUser = new javax.swing.JFormattedTextField();
        ftxtKodeOutlet = new javax.swing.JFormattedTextField();
        btnRefresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlKonfirmasiStok.setForeground(new java.awt.Color(0, 0, 255));

        lblKodeTF.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblKodeTF.setForeground(new java.awt.Color(0, 0, 255));
        lblKodeTF.setText("Kode TF :");

        ftxtKodeTF.setForeground(new java.awt.Color(0, 0, 255));
        ftxtKodeTF.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ftxtKodeTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ftxtKodeTFKeyPressed(evt);
            }
        });

        lblTanggal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblTanggal.setForeground(new java.awt.Color(0, 0, 255));
        lblTanggal.setText("Tanggal :");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Driver :");

        txtDriver.setEditable(false);
        txtDriver.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtDriver.setForeground(new java.awt.Color(0, 0, 255));

        lblMobil.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblMobil.setForeground(new java.awt.Color(0, 0, 255));
        lblMobil.setText("Mobil :");

        txtMobil.setEditable(false);
        txtMobil.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtMobil.setForeground(new java.awt.Color(0, 0, 255));

        lblOutletAsal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblOutletAsal.setForeground(new java.awt.Color(0, 0, 255));
        lblOutletAsal.setText("Outlet Asal :");

        txtOutletAsal.setEditable(false);
        txtOutletAsal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtOutletAsal.setForeground(new java.awt.Color(0, 0, 255));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("Outlet Tujuan :");

        txtOutletTujuan.setEditable(false);
        txtOutletTujuan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtOutletTujuan.setForeground(new java.awt.Color(0, 0, 255));

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Status Delivery :");

        cboStatusDelivery.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cboStatusDelivery.setForeground(new java.awt.Color(0, 0, 255));
        cboStatusDelivery.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Pilih -", "Belum Sampai", "Diterima" }));

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 255));
        jLabel4.setText("Biaya :");

        ftxtBiaya.setEditable(false);
        ftxtBiaya.setForeground(new java.awt.Color(0, 0, 204));
        ftxtBiaya.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        txtKeterangan.setEditable(false);
        txtKeterangan.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtKeterangan.setForeground(new java.awt.Color(0, 0, 255));

        tblRincianTransfer.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tblRincianTransfer.setForeground(new java.awt.Color(0, 0, 255));
        tblRincianTransfer.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblRincianTransferKeyPressed(evt);
            }
        });
        scrlRincianTransfer.setViewportView(tblRincianTransfer);

        ftxtGrandTotal.setEditable(false);
        ftxtGrandTotal.setForeground(new java.awt.Color(0, 0, 255));
        ftxtGrandTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        ftxtGrandTotal.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 255));
        jLabel5.setText("Grand Total Modal :");

        btnKonfirmasi.setBackground(new java.awt.Color(255, 255, 255));
        btnKonfirmasi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Konfirmasi.png"))); // NOI18N
        btnKonfirmasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKonfirmasiActionPerformed(evt);
            }
        });

        ftxtBatal.setBackground(new java.awt.Color(255, 255, 255));
        ftxtBatal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Batal.png"))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 255));
        jLabel6.setText("Pengirim :");

        txtPengirim.setEditable(false);
        txtPengirim.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtPengirim.setForeground(new java.awt.Color(0, 0, 255));

        ftxtKodeUser.setEditable(false);
        ftxtKodeUser.setForeground(new java.awt.Color(0, 0, 255));
        ftxtKodeUser.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ftxtKodeUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ftxtKodeUserActionPerformed(evt);
            }
        });

        ftxtKodeOutlet.setEditable(false);
        ftxtKodeOutlet.setForeground(new java.awt.Color(0, 0, 255));
        ftxtKodeOutlet.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        btnRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/Refresh.png"))); // NOI18N

        javax.swing.GroupLayout pnlKonfirmasiStokLayout = new javax.swing.GroupLayout(pnlKonfirmasiStok);
        pnlKonfirmasiStok.setLayout(pnlKonfirmasiStokLayout);
        pnlKonfirmasiStokLayout.setHorizontalGroup(
            pnlKonfirmasiStokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlKonfirmasiStokLayout.createSequentialGroup()
                .addComponent(scrlRincianTransfer, javax.swing.GroupLayout.PREFERRED_SIZE, 1132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlKonfirmasiStokLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(ftxtGrandTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(pnlKonfirmasiStokLayout.createSequentialGroup()
                .addGap(342, 342, 342)
                .addComponent(btnKonfirmasi)
                .addGap(64, 64, 64)
                .addComponent(ftxtBatal)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlKonfirmasiStokLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(pnlKonfirmasiStokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlKonfirmasiStokLayout.createSequentialGroup()
                        .addComponent(lblKodeTF)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ftxtKodeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnRefresh)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ftxtKodeUser, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ftxtKodeOutlet, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblTanggal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dchTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(46, 46, 46))
                    .addGroup(pnlKonfirmasiStokLayout.createSequentialGroup()
                        .addGroup(pnlKonfirmasiStokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(lblMobil)
                            .addComponent(lblOutletAsal)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addGap(32, 32, 32)
                        .addGroup(pnlKonfirmasiStokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDriver)
                            .addComponent(txtMobil)
                            .addComponent(txtOutletAsal)
                            .addComponent(txtOutletTujuan)
                            .addComponent(cboStatusDelivery, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pnlKonfirmasiStokLayout.createSequentialGroup()
                                .addComponent(ftxtBiaya, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtKeterangan, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE))
                            .addComponent(txtPengirim))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlKonfirmasiStokLayout.setVerticalGroup(
            pnlKonfirmasiStokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlKonfirmasiStokLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlKonfirmasiStokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlKonfirmasiStokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(dchTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(pnlKonfirmasiStokLayout.createSequentialGroup()
                            .addGap(3, 3, 3)
                            .addGroup(pnlKonfirmasiStokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblTanggal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(ftxtKodeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblKodeTF)
                                .addComponent(ftxtKodeUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ftxtKodeOutlet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(btnRefresh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlKonfirmasiStokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtPengirim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlKonfirmasiStokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDriver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlKonfirmasiStokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMobil)
                    .addComponent(txtMobil, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlKonfirmasiStokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblOutletAsal)
                    .addComponent(txtOutletAsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlKonfirmasiStokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtOutletTujuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlKonfirmasiStokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cboStatusDelivery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlKonfirmasiStokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(ftxtBiaya, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtKeterangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(scrlRincianTransfer, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlKonfirmasiStokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ftxtGrandTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(30, 30, 30)
                .addGroup(pnlKonfirmasiStokLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnKonfirmasi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ftxtBatal))
                .addGap(30, 30, 30))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlKonfirmasiStok, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlKonfirmasiStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ftxtKodeTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ftxtKodeTFKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            String Kode = (((String)ftxtKodeTF.getText().trim()).toString());
            int KodeTF = Integer.valueOf(Kode);
            ftxtKodeTF.setValue(new Integer(KodeTF));
            int KodeUser = TS.getKodeUser(KodeTF);
            String NoIdPengirim = Usr.getNoIdentitas(KodeUser);
            String NamaPengirim = Id.getNamaLengkap(NoIdPengirim);
            txtPengirim.setText(NamaPengirim);
            int KodeDriver = TS.getKodeKerja(KodeTF);
            String NoIdDriver = Kerja.getNoIdentitas(KodeDriver);
            String NamaDriver = Id.getNamaLengkap(NoIdDriver);
            txtDriver.setText(NamaDriver);
            int KodeMobil = TS.getKodeMobil(KodeTF);
            String NoPolisi = Mobil.getNoPolisi(KodeMobil);
            int JenisMobil = Mobil.getJenisMobil(KodeMobil);
            String Merek = Mobil.getMerek(KodeMobil);
            String Warna = Mobil.getWarna(KodeMobil);
            if(JenisMobil==1){
                txtMobil.setText(NoPolisi+" Pick Up Open "+Merek+" "+Warna);
            }
            else if(JenisMobil==2){
                txtMobil.setText(NoPolisi+" Pick Up Box "+Merek+" "+Warna);
            }
            else if(JenisMobil==3){
                txtMobil.setText(NoPolisi+" Truk Box "+Merek+" "+Warna);
            }
            else if(JenisMobil==4){
                txtMobil.setText(NoPolisi+" Truk Open "+Merek+" "+Warna);
            }
            int OutletAsal = TS.getOutletAsal(KodeTF);
            String NmOutletAsal = Outlet.getNamaOutlet(OutletAsal);
            txtOutletAsal.setText(NmOutletAsal);
            int OutletTujuan = TS.getOutletTujuan(KodeTF);
            String NmOutletTujuan = Outlet.getNamaOutlet(OutletTujuan);
            txtOutletTujuan.setText(NmOutletTujuan);
            Double Biaya = TS.getBiaya(KodeTF);
            ftxtBiaya.setValue(new Double(Biaya));
            String Keterangan = TS.getKeterangan(KodeTF);
            txtKeterangan.setText(Keterangan);
            
            Rincian.getRincianTransfer(tblRincianTransfer, KodeTF);
            Tab.TableAlignment7(tblRincianTransfer, Left, Left, Center, Center, Center, Right, Right, Center);
            NumberFormatTable();
            HitungGrandTotalModal();
        }
    }//GEN-LAST:event_ftxtKodeTFKeyPressed

    private void btnKonfirmasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKonfirmasiActionPerformed
        // TODO add your handling code here:
        if(tblRincianTransfer.getRowCount()==0){
            JOptionPane.showMessageDialog(this, "Data Penerima Stok Belum Ditampilkan!");
            return;
        }
        if(cboStatusDelivery.getSelectedIndex()==0){
            JOptionPane.showMessageDialog(this, "Status Delivery Belum Dipilih");
            return;
        }
        
        int KodeTF = (((Integer)ftxtKodeTF.getValue()).intValue());
        
        int KodeUser = (((Integer)ftxtKodeUser.getValue()).intValue());
        
        try{
            TS.UpdateKodePenerima(KodeTF, KodeUser);
            TS.UpdateStatusDelivery(KodeTF, 2);
            DefaultTableModel dtm = (DefaultTableModel)tblRincianTransfer.getModel();
            RincianTransfer = new RincianTransfer[dtm.getRowCount()];
            
            for(int i=0;i<RincianTransfer.length;i++){
                RincianTransfer[i] = new RincianTransfer();
                
                RincianTransfer[i].setKodeTF(KodeTF);
                String Barcode = (((String)dtm.getValueAt(i, 0)).toString());
                RincianTransfer[i].setBarcode(Barcode);
                String Satuan = (((String)dtm.getValueAt(i, 2)).toString());
                RincianTransfer[i].setSatuan(Satuan);
                Double Kuantitas = (((Double)dtm.getValueAt(i, 3)).doubleValue());
                RincianTransfer[i].setStokDiterima(Kuantitas);
                
                int KodeRincian = RincianTransfer[i].getKodeRincian(KodeTF, Barcode, Satuan);
                if(cboStatusDelivery.getSelectedIndex()==1){
                    RincianTransfer[i].UpdateStokDiterima(KodeRincian, 0.00);
                }
                else if(cboStatusDelivery.getSelectedIndex()==2){
                    RincianTransfer[i].UpdateStokDiterima(KodeRincian, Kuantitas);
                }
                
            }
            
            DBConnector.getConnection().commit();
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(this, "Data Berhasil Dikonfirmasi");
        }
        catch(SQLException e){
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error Saat Mengkonfirmasi Penermaan : "+e.getMessage(),
                    "Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_btnKonfirmasiActionPerformed

    private void tblRincianTransferKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblRincianTransferKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            DefaultTableModel dtm = (DefaultTableModel)tblRincianTransfer.getModel();
            int row = tblRincianTransfer.getSelectedRow();
            Double Kuantitas = (((Double)dtm.getValueAt(row, 3)).doubleValue());
            Double HrgModal = (((Double)dtm.getValueAt(row, 4)).doubleValue());
            Double Total = Kuantitas * HrgModal;
            dtm.setValueAt(Total, row, 5);
            HitungGrandTotalModal();
        }
    }//GEN-LAST:event_tblRincianTransferKeyPressed

    private void ftxtKodeUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ftxtKodeUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ftxtKodeUserActionPerformed

    private void HitungGrandTotalModal(){
        DefaultTableModel dtm = (DefaultTableModel)tblRincianTransfer.getModel();
        Double GrandTotal = 0.00;
        for(int i=0;i<dtm.getRowCount();i++){
            Double Total = ((Double)dtm.getValueAt(i, 6)).doubleValue();
            GrandTotal += Total;
        }
        ftxtGrandTotal.setValue(new Double(GrandTotal));
    }
    
    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnKonfirmasi;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JComboBox<String> cboStatusDelivery;
    private com.toedter.calendar.JDateChooser dchTanggal;
    private javax.swing.JButton ftxtBatal;
    private javax.swing.JFormattedTextField ftxtBiaya;
    private javax.swing.JFormattedTextField ftxtGrandTotal;
    public javax.swing.JFormattedTextField ftxtKodeOutlet;
    private javax.swing.JFormattedTextField ftxtKodeTF;
    public javax.swing.JFormattedTextField ftxtKodeUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel lblKodeTF;
    private javax.swing.JLabel lblMobil;
    private javax.swing.JLabel lblOutletAsal;
    private javax.swing.JLabel lblTanggal;
    private javax.swing.JPanel pnlKonfirmasiStok;
    private javax.swing.JScrollPane scrlRincianTransfer;
    private javax.swing.JTable tblRincianTransfer;
    private javax.swing.JTextField txtDriver;
    private javax.swing.JTextField txtKeterangan;
    private javax.swing.JTextField txtMobil;
    private javax.swing.JTextField txtOutletAsal;
    private javax.swing.JTextField txtOutletTujuan;
    private javax.swing.JTextField txtPengirim;
    // End of variables declaration//GEN-END:variables
}
